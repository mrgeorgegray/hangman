{"version":3,"sources":["context/Game/state.ts","config/movies.ts","config/themes.ts","config/index.ts","context/Game/utils.ts","hooks/useLocalStorage.ts","context/Game/index.tsx","components/Banner/index.tsx","components/Button/index.tsx","components/Hangman/index.tsx","components/Letter/index.tsx","components/Solution/index.tsx","views/Game/index.tsx","views/Home/index.tsx","components/Footer/index.tsx","components/ThemeSwitch/moon.svg","components/ThemeSwitch/sun.svg","components/ThemeSwitch/index.tsx","components/App/index.tsx","index.tsx"],"names":["GameStatus","movies","baseTheme","border","color","radius","width","breakpoints","md","lg","colors","background","error","grey","link","linkHover","purple","softError","softSuccess","success","text","warning","fontSize","hangman","fill","stroke","layout","maxWidth","space","transitions","lightTheme","darkTheme","SOLUTIONS","THEMES","dark","light","formatSolution","solution","guesses","hiddenCharacter","Array","from","map","character","includes","join","initialState","chancesRemaining","letters","solutionFormatted","status","NotStarted","theme","curriedGameReducer","produce","draft","action","type","arr","Math","floor","random","length","utils","Playing","Lost","letter","payload","push","Won","useLocalStorage","key","initialValue","readValue","React","useCallback","item","window","localStorage","getItem","JSON","parse","console","warn","useState","storedValue","setStoredValue","useEffect","value","newValue","Function","setItem","stringify","GameDispatchContext","createContext","GameStateContext","useGameDispatch","dispatch","useContext","Error","useGameState","state","GameContext","children","gameState","setGameState","useReducer","Provider","Banner","message","useTheme","role","css","Button","onClick","size","fadeIn","keyframes","Hangman","memo","fillColor","showHead","showBody","showLeftArm","showRightArm","showLeftLeg","showRightLeg","reveal","aria-hidden","focusable","xmlns","viewBox","strokeWidth","fillRule","transform","id","d","Letter","isCorrect","isDisabled","shouldHighlight","disabled","Solution","textColor","GamePage","handleGuess","handleKeyup","event","handleNewGame","addEventListener","removeEventListener","aria-live","flatMap","isUsed","aria-controls","HomePage","Footer","href","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","SvgMoon","_ref","svgRef","title","titleId","props","height","ref","ForwardRef","_ref3","_ref4","_ref5","_ref6","SvgSun","ThemeSwitch","currentTheme","handleChange","isDarkEnabled","data-testid","htmlFor","name","checked","onChange","App","styles","emotionNormalize","Home","ReactDOM","render","StrictMode","Game","document","getElementById"],"mappings":"8GAKYA,E,uFC0PGC,EA3PA,CACb,mBACA,4BACA,oBACA,gBACA,iBACA,aACA,WACA,QACA,qBACA,kBACA,YACA,eACA,aACA,UACA,mBACA,SACA,cACA,qBACA,YACA,WACA,gBACA,eACA,WACA,gBACA,aACA,cACA,eACA,WACA,YACA,UACA,cACA,uBACA,uBACA,YACA,cACA,kBACA,YACA,qBACA,WACA,aACA,oBACA,sBACA,mBACA,gBACA,WACA,WACA,YACA,WACA,iCACA,kBACA,QACA,mBACA,sBACA,MACA,iBACA,eACA,4BACA,eACA,WACA,SACA,aACA,UACA,YACA,eACA,SACA,YACA,YACA,aACA,UACA,aACA,YACA,UACA,kBACA,OACA,aACA,aACA,aACA,iCACA,2BACA,WACA,gBACA,YACA,0BACA,aACA,WACA,eACA,KACA,8BACA,gBACA,OACA,YACA,cACA,iBACA,YACA,8BACA,QACA,aACA,aACA,oBACA,gBACA,iBACA,gBACA,YACA,OACA,QACA,gBACA,gBACA,cACA,sBACA,UACA,uBACA,mBACA,UACA,kBACA,kBACA,qBACA,QACA,eACA,OACA,YACA,SACA,gBACA,SACA,SACA,eACA,yBACA,SACA,eACA,aACA,SACA,sBACA,WACA,WACA,eACA,YACA,QACA,mBACA,OACA,QACA,iCACA,eACA,sBACA,QACA,SACA,UACA,WACA,QACA,SACA,QACA,iBACA,eACA,WACA,cACA,qBACA,sBACA,OACA,cACA,WACA,YACA,QACA,YACA,8BACA,kCACA,gBACA,aACA,gBACA,WACA,MACA,QACA,cACA,QACA,iBACA,mBACA,eACA,0BACA,sBACA,yBACA,2BACA,gBACA,kBACA,eACA,eACA,gBACA,UACA,eACA,WACA,gBACA,iBACA,iBACA,sCACA,sBACA,kBACA,oBACA,iBACA,gBACA,eACA,cACA,aACA,sBACA,gBACA,mBACA,iCACA,eACA,iBACA,aACA,2BACA,eACA,eACA,mBACA,0BACA,2BACA,cACA,6BACA,2BACA,2BACA,kBACA,iB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","file":"static/js/main.d1f219fd.chunk.js","sourcesContent":["import produce, { Draft } from \"immer\";\n\nimport { LETTERS, STARTING_CHANCES, SOLUTIONS, THEMES } from \"../../config\";\nimport * as utils from \"./utils\";\n\nexport enum GameStatus {\n  NotStarted = \"notStarted\",\n  Playing = \"playing\",\n  Lost = \"lost\",\n  Won = \"won\",\n}\n\nexport type Theme = keyof typeof THEMES;\n\n// prettier-ignore\nexport type GameAction =\n  | { type: \"giveup\" }\n  | { type: \"guess\"; payload: { letter: string }; }\n  | { type: \"quit\" }\n  | { type: \"setTheme\"; payload: { theme: Theme }; }\n  | { type: \"start\" };\n\nexport interface GameState {\n  chancesRemaining: number;\n  guesses: string[];\n  letters: string[];\n  solution: string;\n  solutionFormatted: string;\n  status: GameStatus;\n  theme: Theme;\n}\n\nexport const initialState: GameState = {\n  chancesRemaining: 0,\n  guesses: [],\n  letters: LETTERS,\n  solution: \"\",\n  solutionFormatted: \"\",\n  status: GameStatus.NotStarted,\n  theme: \"light\",\n};\n\nconst gameReducer = (draft: Draft<GameState>, action: GameAction) => {\n  switch (action.type) {\n    case \"start\": {\n      const solution = utils.sample(SOLUTIONS.movies);\n      draft.chancesRemaining = STARTING_CHANCES;\n      draft.guesses = [];\n      draft.solution = solution;\n      draft.solutionFormatted = utils.formatSolution(\n        draft.solution,\n        draft.guesses\n      );\n      draft.status = GameStatus.Playing;\n      return;\n    }\n\n    case \"quit\": {\n      draft.chancesRemaining = initialState.chancesRemaining;\n      draft.guesses = initialState.guesses;\n      draft.letters = initialState.letters;\n      draft.solution = initialState.solution;\n      draft.solutionFormatted = initialState.solutionFormatted;\n      draft.status = initialState.status;\n      return;\n    }\n\n    case \"giveup\": {\n      draft.chancesRemaining = 0;\n      draft.solutionFormatted = draft.solution;\n      draft.status = GameStatus.Lost;\n      return;\n    }\n\n    case \"guess\": {\n      const { letter } = action.payload;\n\n      draft.guesses.push(action.payload.letter);\n      draft.solutionFormatted = utils.formatSolution(\n        draft.solution,\n        draft.guesses\n      );\n      draft.chancesRemaining = draft.solution.includes(letter)\n        ? draft.chancesRemaining\n        : draft.chancesRemaining - 1;\n\n      if (draft.solution === draft.solutionFormatted) {\n        draft.status = GameStatus.Won;\n      }\n      if (draft.chancesRemaining === 0) {\n        draft.solutionFormatted = draft.solution;\n        draft.status = GameStatus.Lost;\n      }\n      return;\n    }\n\n    case \"setTheme\": {\n      draft.theme = action.payload.theme;\n      return;\n    }\n\n    default: {\n      return;\n    }\n  }\n};\n\nexport const curriedGameReducer = produce(gameReducer);\n","/* ===============\nMOVIES\nall numbers and special chars removed\n=============== */\nconst movies = [\n  \"a beautiful mind\",\n  \"a charlie brown christmas\",\n  \"a christmas story\",\n  \"a quiet place\",\n  \"a star is born\",\n  \"about time\",\n  \"ad astra\",\n  \"alien\",\n  \"always be my maybe\",\n  \"american beauty\",\n  \"anchorman\",\n  \"annihilation\",\n  \"apocalypto\",\n  \"arrival\",\n  \"arthur christmas\",\n  \"avatar\",\n  \"baby driver\",\n  \"back to the future\",\n  \"bad santa\",\n  \"baywatch\",\n  \"beautiful boy\",\n  \"big hero six\",\n  \"bird box\",\n  \"black panther\",\n  \"black swan\",\n  \"black widow\",\n  \"blade runner\",\n  \"blockers\",\n  \"booksmart\",\n  \"boyhood\",\n  \"bridesmaids\",\n  \"bridget joness diary\",\n  \"call me by your name\",\n  \"cast away\",\n  \"chicken run\",\n  \"children of men\",\n  \"chinatown\",\n  \"christmas vacation\",\n  \"clueless\",\n  \"collateral\",\n  \"crazy rich asians\",\n  \"crazy, stupid, love\",\n  \"dawn of the dead\",\n  \"despicable me\",\n  \"die hard\",\n  \"die hard\",\n  \"dodgeball\",\n  \"dolittle\",\n  \"dora and the lost city of gold\",\n  \"dumb and dumber\",\n  \"dumbo\",\n  \"edge of tomorrow\",\n  \"edward scissorhands\",\n  \"elf\",\n  \"eyes wide shut\",\n  \"finding dory\",\n  \"forgetting sarah marshall\",\n  \"forrest gump\",\n  \"free guy\",\n  \"frozen\",\n  \"game night\",\n  \"get out\",\n  \"ghost dog\",\n  \"ghostbusters\",\n  \"gifted\",\n  \"gladiator\",\n  \"good boys\",\n  \"goodfellas\",\n  \"gravity\",\n  \"green book\",\n  \"halloween\",\n  \"hancock\",\n  \"happiest season\",\n  \"heat\",\n  \"hereditary\",\n  \"home again\",\n  \"home alone\",\n  \"how the grinch stole christmas\",\n  \"how to train your dragon\",\n  \"hustlers\",\n  \"i feel pretty\",\n  \"inception\",\n  \"raiders of the lost ark\",\n  \"inside out\",\n  \"insomnia\",\n  \"interstellar\",\n  \"it\",\n  \"it happened on fifth avenue\",\n  \"casino royale\",\n  \"jaws\",\n  \"john wick\",\n  \"jojo rabbit\",\n  \"joyeux noël\",\n  \"kill bill\",\n  \"kingsman the secret service\",\n  \"klaus\",\n  \"knives out\",\n  \"knocked up\",\n  \"kong skull island\",\n  \"kung fu panda\",\n  \"last christmas\",\n  \"lethal weapon\",\n  \"liar liar\",\n  \"lion\",\n  \"logan\",\n  \"love actually\",\n  \"love actually\",\n  \"love, simon\",\n  \"lucky number slevin\",\n  \"mad max\",\n  \"mary poppins returns\",\n  \"meet the fockers\",\n  \"minions\",\n  \"minority report\",\n  \"minority report\",\n  \"mission impossible\",\n  \"moana\",\n  \"monsters inc\",\n  \"moon\",\n  \"moonlight\",\n  \"mother\",\n  \"mulholland dr\",\n  \"munich\",\n  \"my spy\",\n  \"mystic river\",\n  \"no country for old men\",\n  \"noelle\",\n  \"notting hill\",\n  \"old school\",\n  \"oldboy\",\n  \"paranormal activity\",\n  \"parasite\",\n  \"predator\",\n  \"pretty woman\",\n  \"prisoners\",\n  \"rango\",\n  \"ready player one\",\n  \"ring\",\n  \"rocky\",\n  \"rudolph, the rednosed reindeer\",\n  \"run lola run\",\n  \"saving private ryan\",\n  \"scoob\",\n  \"scream\",\n  \"scrooge\",\n  \"scrooged\",\n  \"seven\",\n  \"shazam\",\n  \"shrek\",\n  \"shutter island\",\n  \"silent night\",\n  \"sin city\",\n  \"snowpiercer\",\n  \"sonic the hedgehog\",\n  \"sorry to bother you\",\n  \"soul\",\n  \"source code\",\n  \"southpaw\",\n  \"spiderman\",\n  \"split\",\n  \"spotlight\",\n  \"star trek the wrath of khan\",\n  \"star wars the rise of skywalker\",\n  \"step brothers\",\n  \"straw dogs\",\n  \"suicide squad\",\n  \"superbad\",\n  \"tag\",\n  \"taken\",\n  \"taxi driver\",\n  \"tenet\",\n  \"the accountant\",\n  \"the big lebowski\",\n  \"the big sick\",\n  \"the blair witch project\",\n  \"the bourne identity\",\n  \"the cabin in the woods\",\n  \"the christmas chronicles\",\n  \"the conjuring\",\n  \"the dark knight\",\n  \"the departed\",\n  \"the exorcist\",\n  \"the favourite\",\n  \"the fly\",\n  \"the fugitive\",\n  \"the game\",\n  \"the godfather\",\n  \"the green mile\",\n  \"the half of it\",\n  \"the house with a clock in its walls\",\n  \"the human centipede\",\n  \"the incredibles\",\n  \"the invisible man\",\n  \"the lego movie\",\n  \"the lion king\",\n  \"the longshot\",\n  \"the martian\",\n  \"the matrix\",\n  \"the next three days\",\n  \"the nice guys\",\n  \"the night before\",\n  \"the nightmare before christmas\",\n  \"the notebook\",\n  \"the other guys\",\n  \"the others\",\n  \"the peanut butter falcon\",\n  \"the prestige\",\n  \"the proposal\",\n  \"the santa clause\",\n  \"the secret life of pets\",\n  \"the shawshank redemption\",\n  \"the shining\",\n  \"the shop around the corner\",\n  \"the silence of the lambs\",\n  \"the silence of the lambs\",\n  \"the sixth sense\",\n  \"the terminator\",\n  \"the texas chain saw massacre\",\n  \"the thing\",\n  \"the transporter\",\n  \"the usual suspects\",\n  \"the wailing\",\n  \"the witch\",\n  \"there will be blood\",\n  \"theres something about mary\",\n  \"thor\",\n  \"titanic\",\n  \"togo\",\n  \"tomb raider\",\n  \"total recall\",\n  \"toy story\",\n  \"trading places\",\n  \"trainwreck\",\n  \"trolls\",\n  \"tropic thunder\",\n  \"twelve monkeys\",\n  \"up\",\n  \"us\",\n  \"v for vendetta\",\n  \"vice\",\n  \"walle\",\n  \"wedding crashers\",\n  \"when harry met sally\",\n  \"whiplash\",\n  \"wonder\",\n  \"wreckit ralph\",\n  \"youve got mail\",\n  \"zoolander\",\n];\n\nexport default movies;\n","import { Theme } from \"@emotion/react\";\n\nconst baseTheme: Theme = {\n  border: {\n    color: \"#30353B\",\n    radius: 3,\n    width: 2,\n  },\n  breakpoints: {\n    md: \"500px\",\n    lg: \"720px\",\n  },\n  colors: {\n    background: \"#F5F5F5\",\n    error: \"#FF0033\",\n    grey: \"#949DA5\",\n    link: \"#0366D6\",\n    linkHover: \"#0387D6\",\n    purple: \"#6E40C9\",\n    softError: \"#FFBABA\",\n    softSuccess: \"#9BE9A8\",\n    success: \"#27D545\",\n    text: \"#30353B\",\n    warning: \"#FF7903\",\n  },\n  fontSize: [14, 18, 22, 34, 50],\n  hangman: {\n    fill: \"#30353B\",\n    stroke: \"48, 53, 59\",\n  },\n  layout: {\n    maxWidth: \"1000px\",\n  },\n  space: [4, 8, 16, 32, 64, 96, 128],\n  transitions: [0.15, 0.2, 0.5],\n};\n\nexport const lightTheme: Theme = {\n  ...baseTheme,\n};\n\nexport const darkTheme: Theme = {\n  ...baseTheme,\n  border: {\n    ...baseTheme.border,\n    color: \"transparent\",\n  },\n  colors: {\n    ...baseTheme.colors,\n    background: \"#0D1117\",\n    link: \"#58A6FF\",\n    linkHover: \"#ABE0FF\",\n    softError: \"#DA3733\",\n    softSuccess: \"#02602C\",\n    text: \"#F5F5F5\",\n  },\n  hangman: {\n    fill: \"#ADADAD\",\n    stroke: \"245, 245, 245\",\n  },\n};\n","import movies from \"./movies\";\nimport { darkTheme, lightTheme } from \"./themes\";\n\n/* ===============\nSTARTING_CHANCES\nhow many guesses a user\nhas before the Hangman is dead\nmust match <Hangman /> setup.\n=============== */\nexport const STARTING_CHANCES = 6;\n\n/* ===============\nLETTERS\ndetermine what is displayed\non the keyboard. Make sure\nyou include all letters that\nare in your solutions.\n=============== */\n// prettier-ignore\nexport const LETTERS = [\n  \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\n  \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\",\n  \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n];\n\n/* ===============\nSOLUTIONS\n@todo topics etc.\n=============== */\nexport const SOLUTIONS = {\n  movies,\n};\n\n/* ===============\nTHEME\n@todo dark, a11y, etc.\n=============== */\nexport const THEMES = {\n  dark: darkTheme,\n  light: lightTheme,\n};\n","/**\n * Returns a random string from an array\n */\nexport function sample(arr: string[]) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Obscures the solution against user guesses\n * @param  {string} p1 - The full solution\n * @param  {string[]} p2 - An array of letters\n * @param  {string[]} p3 - An optional value to hide characters with, defaults to \"_\"\n * @return {string} A formatted string\n */\nexport function formatSolution(\n  solution: string,\n  guesses: string[],\n  hiddenCharacter = \"_\"\n) {\n  return Array.from(solution)\n    .map((character) => {\n      if (character === \" \") {\n        return \" \";\n      }\n      if (guesses.includes(character)) {\n        return character;\n      }\n      return hiddenCharacter;\n    })\n    .join(\"\");\n}\n","import React from \"react\";\n\nfunction useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [T, (value: T) => void] {\n  const readValue = React.useCallback(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error);\n      return initialValue;\n    }\n  }, [key, initialValue]);\n\n  const [storedValue, setStoredValue] = React.useState<T>(readValue);\n\n  const setValue = (value: T) => {\n    try {\n      const newValue = value instanceof Function ? value(storedValue) : value;\n      window.localStorage.setItem(key, JSON.stringify(newValue));\n      setStoredValue(newValue);\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error);\n    }\n  };\n\n  React.useEffect(() => {\n    setStoredValue(readValue());\n  }, [readValue]);\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { Immutable } from \"immer\";\n\nimport {\n  initialState,\n  curriedGameReducer,\n  GameAction,\n  GameState,\n} from \"./state\";\nimport { THEMES } from \"../../config\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\n// ===============\n// Setup\n// ===============\nexport const GameDispatchContext = createContext<React.Dispatch<GameAction> | null>(\n  null\n);\n\nexport const GameStateContext = createContext<ReturnType<\n  typeof curriedGameReducer\n> | null>(null);\n\n// ===============\n// Custom hooks\n// ===============\nexport function useGameDispatch() {\n  const dispatch = useContext(GameDispatchContext);\n\n  if (!dispatch) {\n    throw new Error(\n      \"useGameDispatch must be used within a GameDispatchProvider.\"\n    );\n  }\n\n  return dispatch;\n}\n\nexport function useGameState() {\n  const state = useContext(GameStateContext);\n\n  if (!state) {\n    throw new Error(\"useGameState must be used within a GameStateProvider.\");\n  }\n\n  return state;\n}\n\n// ===============\n// Context\n// ===============\nconst GameContext: React.FC = ({ children }) => {\n  const [gameState, setGameState] = useLocalStorage<Immutable<GameState>>(\n    \"gameState\",\n    initialState\n  );\n  const [state, dispatch] = useReducer(curriedGameReducer, gameState);\n\n  React.useEffect(() => {\n    setGameState(state);\n  }, [state, setGameState]);\n\n  let theme = THEMES.light;\n\n  if (state.theme === \"dark\") {\n    theme = THEMES.dark;\n  }\n\n  return (\n    <GameDispatchContext.Provider value={dispatch}>\n      <GameStateContext.Provider value={state}>\n        <ThemeProvider theme={theme}>{children}</ThemeProvider>\n      </GameStateContext.Provider>\n    </GameDispatchContext.Provider>\n  );\n};\n\nexport default GameContext;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, useTheme } from \"@emotion/react\";\n\nexport interface BannerProps {\n  action: JSX.Element;\n  message: string;\n  type: \"error\" | \"success\";\n}\n\nconst Banner: React.FC<BannerProps> = ({ action, message, type }) => {\n  const { border, breakpoints, colors, layout, space } = useTheme();\n\n  return (\n    <div\n      role=\"alert\"\n      css={css`\n        border: ${border.width}px solid ${border.color};\n        border-radius: ${border.radius}px;\n        padding: ${space[2]}px;\n        margin-top: ${space[2]}px;\n        max-width: ${layout.maxWidth};\n        text-align: center;\n        ${type === \"error\" && ` background-color: ${colors.softError}; `}\n        ${type === \"success\" && ` background-color: ${colors.softSuccess}; `}\n\n        @media (min-width: ${breakpoints.lg}) {\n          left: 0;\n          margin-left: auto;\n          margin-right: auto;\n          margin-top: 0;\n          position: absolute;\n          right: 0;\n          top: ${space[1]}px;\n          width: 90%;\n        }\n      `}\n    >\n      <span\n        css={css`\n          display: block;\n          margin-bottom: ${space[2]}px;\n\n          @media (min-width: ${breakpoints.lg}) {\n            display: inline;\n            margin-right: ${space[2]}px;\n            margin-bottom: 0;\n          }\n        `}\n      >\n        <strong>{message}</strong>\n      </span>\n      {action}\n    </div>\n  );\n};\n\nexport default Banner;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, useTheme } from \"@emotion/react\";\n\nexport interface ButtonProps {\n  onClick: () => void;\n  size?: \"large\";\n  text: string;\n  type: \"error\" | \"plain\" | \"success\" | \"warning\";\n}\n\nconst Button: React.FC<ButtonProps> = ({ onClick, size, text, type }) => {\n  const { border, colors, fontSize, transitions } = useTheme();\n\n  return (\n    <button\n      css={css`\n        background-color: ${colors.background};\n        border: ${border.width}px solid ${colors.text};\n        border-radius: ${border.radius}px;\n        color: ${colors.text};\n        font-size: ${size === \"large\" ? fontSize[2] : fontSize[1]}px;\n        outline: none;\n        padding: ${size === \"large\" ? `16px 24px` : `12px 18px`};\n        transition: all ${transitions[0]}s ease-in;\n\n        &:hover {\n          color: ${colors.background};\n          cursor: pointer;\n          ${type === \"error\" &&\n          `\n            background-color: ${colors.error};\n            border-color: ${colors.error};\n          `}\n          ${type === \"plain\" &&\n          `\n            background-color: ${colors.text};\n            border-color: ${colors.text};\n          `}\n          ${type === \"warning\" &&\n          `\n            background-color: ${colors.warning};\n            border-color: ${colors.warning};\n          `}\n            ${type === \"success\" &&\n          `\n            background-color: ${colors.success};\n            border-color: ${colors.success};\n          `}\n        }\n      `}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, keyframes, useTheme } from \"@emotion/react\";\ninterface HangmanProps {\n  chancesRemaining: number;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Hangman = React.memo<HangmanProps>(({ chancesRemaining }) => {\n  const { breakpoints, hangman, transitions } = useTheme();\n  const fillColor = hangman.fill;\n  const showGallows = true;\n  const showHead = chancesRemaining <= 5;\n  const showBody = chancesRemaining <= 4;\n  const showLeftArm = chancesRemaining <= 3;\n  const showRightArm = chancesRemaining <= 2;\n  const showLeftLeg = chancesRemaining <= 1;\n  const showRightLeg = chancesRemaining === 0;\n\n  const reveal = css`\n    animation-delay: 0.1s;\n    animation-duration: ${transitions[2]}s;\n\n    @media (prefers-reduced-motion: no-preference) {\n      animation-name: ${fadeIn};\n      animation-fill-mode: backwards;\n    }\n  `;\n\n  return (\n    <div\n      css={css`\n        margin: 0 auto;\n        max-width: 250px;\n\n        @media (min-width: ${breakpoints.md}) {\n          max-width: 380px;\n        }\n\n        @media (min-width: ${breakpoints.lg}) {\n          max-width: 800px;\n        }\n      `}\n    >\n      <svg\n        role=\"img\"\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 346 358\"\n      >\n        <title>Hangman Graphic</title>\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(-16)\" fill={fillColor}>\n            <g id=\"hangman\" transform=\"translate(16)\">\n              {showRightLeg && (\n                <path\n                  id=\"right-leg\"\n                  css={reveal}\n                  d=\"M195.818 177.267c.042.054.085.103.127.16.165.285.281.553.369.812.313.304.633.636.965 1.02 1.445 1.741 3.922 5.776 7.429 12.106.927 1.701 1.578 3.049 1.95 4.043.099.114.925 2.497 2.478 7.147l1.606 4.13c.168.232.616 2.021 1.344 5.367.414 1.887.454 6.296.117 13.228l-.171 1.375c-.831 4.488-1.207 6.718-1.13 6.688-.139 1.411-.215 2.325-.229 2.741-.027 3.817-.093 5.795-.198 5.937-.414 2.25-.75 4.398-1.011 6.451-.032.79-.076 1.41-.136 1.825l-.67 4.349c1.351 1.474 2.032 2.284 2.028 2.418.414.727.59 1.369.526 1.926-.521 2.032-1.806 3.23-3.854 3.593-.592.018-1.21-.182-1.857-.6l-3.742-3.118c-.342-.419-.594-.907-.758-1.463-.125-.437-.178-.941-.161-1.511-.369-1.313-.529-2.02-.479-2.12-.017-.247.002-.489.037-.73a59.626 59.626 0 01-.19-.953c-.122-1.511.487-2.709 1.827-3.589.006-.041.012-.09.018-.131l.068-1.788.315-2.813c.08-1.217.12-3.43.119-6.64.097-2.041.242-3.78.438-5.216.02-.103.039-1.073.056-2.911l-.048-8.01c0-.615-.099-1.94-.297-3.972.008-.081-.1-.77-.324-2.069-.401-1.238-1.053-4.483-1.955-9.738-.447-2.074-.985-3.748-1.615-5.021-.383-.816-1.026-2.038-1.931-3.664-2.028-3.149-3.274-5.236-3.74-6.266-.064-.124-.121-.239-.183-.36-.377.136-.788.222-1.239.245-.657-.039-1.224-.187-1.716-.422l-.353 1.726c-.1725.705-.4008 2.1815-.6845 4.4293l-1.1258-5.5707 7.979-13.3966.0013.356z\"\n                />\n              )}\n              {showLeftLeg && (\n                <path\n                  id=\"left-leg\"\n                  css={reveal}\n                  d=\"M184.3842 175.5107l11.7742 2.332c.005.0112.01.0223.0148.0334l-6.1722 11.8469-.353 1.726c-.252 1.03-.623 3.706-1.112 8.028l-.525 3.163c-.507 5.107-.649 9.39-.429 12.849l.939 6.241.449 4.995.811 4.971c.251 1.395 1.077 4.429 2.477 9.101l2.15 9.657 2.233 7.193 4.167 10.001c.105.261.175.644.218 1.126.953.248 1.715.843 2.282 1.786.149.268.263.558.343.869.084.331.121.669.112 1.015.074.236.142.469.202.697.038.128.138.547.3 1.257l.322 1.165c.098.4.175.97.231 1.706.307 2.932-.936 4.442-3.728 4.531-.767.005-1.457-.195-2.069-.601-.196-.128-.395-.287-.594-.477a5.0704 5.0704 0 01-.553-.627c-.431-.29-.897-.731-1.399-1.324-.761-.866-1.237-2.159-1.454-3.839-.09-.178-.182-.349-.27-.543-.364-.798-.603-1.437-.718-1.917-.167-.581-.301-1.436-.402-2.566l-.329-1.1-3.608-8.598-2.236-7.117c-1.353-5.485-2.155-9.015-2.406-10.591-1.334-4.389-2.178-7.508-2.533-9.357-.129-.629-.429-2.473-.9-5.53l-.449-4.99-.962-6.462c-.269-4.038-.115-8.87.463-14.496.356-1.738.762-4.653 1.218-8.747l.47-2.77.555-2.668 1.094-3.881.658-4.27c-.116-.082-.203-.199-.239-.373a.5257.5257 0 01-.002-.126l.109-1.1c.01-.128.008-.326-.005-.592-.014-.179-.032-.335-.054-.469a27.7037 27.7037 0 01-.1854-.9574l.0946-.2009z\"\n                />\n              )}\n              {showRightArm && (\n                <path\n                  id=\"right-arm\"\n                  css={reveal}\n                  d=\"M199.0167 127.5824l-.2737-.7204a73.524 73.524 0 013.578 12.31c.067.341.13.713.184 1.117.105 1.005.298 2.524.568 4.508.27 1.182.548 2.477.837 3.912l1.841 9.686 2.334 10.97c.02.097.043.222.064.333.189.102.373.219.549.363.411.316.874.872 1.389 1.666.879.885 1.381 1.415 1.506 1.589 1.1 1.257 1.764 2.669 1.992 4.235.298 2.045.056 3.572-.726 4.578-1.102 1.351-2.465 2.055-4.092 2.114-1.889-.09-3.202-.707-3.94-1.853-.415-.67-.605-1.498-.584-2.479-1.195-.335-1.988-1.113-2.376-2.335-.179-.579-.263-1.291-.252-2.137l-.781-4.571-2.267-10.65c-1.413-7.631-2.342-12.333-2.786-14.105-.558-2.544-1.36-5.232-2.368-8.039 0 .006.001.011.001.017l.0061 1.041-2.0697-11.2474c.873.0764 1.7567.1154 2.6496.1154 1.7094 0 3.3854-.143 5.0167-.4176z\"\n                />\n              )}\n              {showLeftArm && (\n                <path\n                  id=\"left-arm\"\n                  css={reveal}\n                  d=\"M184.3842 126.4258l-.0989 6.4504a56.186 56.186 0 00-.1153.4168c-2.207 8.348-3.533 14.518-3.977 18.51-.344 2.584-.571 5.146-.683 7.687-.055.057-.093 3.464-.112 10.217.01 2.049.047 3.908.108 5.597.353.566.522 1.197.536 1.882.309.703.41 1.435.277 2.199-.344 2.115-.737 3.479-1.18 4.107.025.073.055.149.075.22.209.73.177 1.413-.097 2.05-.278.644-.828 1.234-1.652 1.769-.642.417-1.331.627-2.065.63-1.692-.077-2.903-.688-3.631-1.832-.386-.611-.579-1.283-.58-2.016-.397-.735-.664-1.397-.799-1.985-.176-.703-.236-1.484-.179-2.34.103-1.693.659-3.067 1.667-4.124.074-.077.152-.144.228-.217-.126-4.267-.157-8.588-.077-12.973.012-3.315.22-6.724.623-10.226.432-3.694 1.056-7.33 1.87-10.907 1.436-6.362 2.663-11.061 3.681-14.098.4146-1.2285.86-2.2763 1.3353-3.1532a29.775 29.775 0 004.8459 2.136zm-.1324 8.5929l-.2228 14.4413-.065-6.92c-.002-.356-.002-.694.001-1.016.0047-1.2826.1007-3.4531.2868-6.5053z\"\n                />\n              )}\n              {showBody && (\n                <path\n                  id=\"body\"\n                  css={reveal}\n                  d=\"M193.0077 127.9839l.0001 10.5093.4239 2.3256.0173 2.5992c.086 1.465.259 3.929.525 7.428.025.386.04.799.062 1.193l.573 4.116.181 2.36.565 5.471c.047.438.089 1.386.126 2.843.253 2.053.38 3.343.381 3.872.014.4.02.804.015 1.214-.052 1.515-.074 2.756-.065 3.723.002.575.004 1.113.006 1.629.042.054.085.103.127.16.131.2261.231.4415.3107.6502l-11.725 1.12c-.0479-.0653-.0837-.1444-.1037-.2412a.5257.5257 0 01-.002-.126l.109-1.1c.01-.128.008-.326-.005-.592-.014-.179-.032-.335-.054-.469-.161-.765-.267-1.393-.319-1.883-.073-.668-.121-1.353-.142-2.053-.004-.137-.006-.273-.007-.407l-.083-9.118c-.001-.567.003-1.096.01-1.587.049-2.7648.0749-4.4218.0778-4.9693l.0002-.0627c.005-.042.012-1.726.021-5.054.002-.679 0-1.37-.004-2.075l-.065-6.92c-.002-.356-.002-.694.001-1.016.004-1.1057.076-2.8714.215-5.2929l.2848-3.1598-.081-.136.004-.0615.0309-.471-.0816.2893-.0307.1091-4.8867-8.2878c.0393-.0757.0788-.1502.1186-.2236 4.0164 2.215 8.596 3.5357 13.4694 3.6941z\"\n                />\n              )}\n              {showHead && (\n                <path\n                  id=\"head\"\n                  css={reveal}\n                  d=\"M187.327 78.879h.032c.46-.0128 1.035.084 1.724.29.031.008.057.017.086.025.129-.011.256-.026.388-.026h.017c.332-.003.656.024.973.077.114.017.3.049.519.09.158.014.305.027.472.043.126.03.263.071.39.101l.2412-.0001a4.8635 4.8635 0 00.1078-.0019c.223.02.439.069.652.15.073.028.136.071.206.103l1.391.238 1.124.049c.222.016.417.037.586.064.386.061.749.15 1.089.269l.432.169.101.054c-.116-.064-.027-.024.3.139.269.145.513.303.731.477.327.258.607.56.84.905.015.01.025.023.039.033.682.34 1.413.714 2.182 1.115.309.013.723.007 1.241-.02.22.032.432.107.635.223.158.087.312.224.463.412.332.638.794 1.29 1.338 1.952.755.758 1.381 1.604 1.878 2.539.129.074.259.172.39.311.407.488.782 1.186 1.124 2.095.161 1.722.09 2.805-.211 3.259l3.897 3.579c.679.646 1.221 1.263 1.628 1.853 1.537 2.403 2.102 5.433 1.694 9.089-.259 2.163-.752 3.824-1.479 4.981-.015.063-.12.223-.294.46-.619 2.769-1.73 5.412-3.362 7.923-2.372 3.408-6.437 5.384-12.149 5.964l.1363.358c-3.059.2005-6.0444.0498-7.3793-.0096-2.936-.1306-8.089-2.1091-11.8183-3.1788.0713-.1246.1425-.2444.2143-.3606-.549-.289-1.093-.585-1.613-.911-6.034-3.806-9.703-8.522-11.006-14.146-1.671-5.764-.485-11.996 3.556-18.697.834-1.348 1.822-2.668 2.965-3.962.186-.559.433-1.02.743-1.382l.461-.464 2.293-1.806c.908-.652 1.736-1.135 2.488-1.457.041-.062.104-.11.172-.155l4.565-2.203c1.727-.474 2.663-.677 2.807-.609zm-2.744 9.611h-.014l-.223.021c-.032.323-.072.541-.121.635-.151.37-.395.558-.732.562-.464-.062-.821-.283-1.082-.647-.797.542-1.585 1.219-2.365 2.041-1.884 1.924-3.379 4.158-4.482 6.701-1.926 3.797-2.092 7.76-.498 11.89.581 1.471 1.472 2.839 2.635 4.115.357-.049.731-.074 1.143-.047.599.055 1.179.194 1.739.416l2.535 1.367 5.007 1.705c.64.225 1.812.762 3.518 1.611.266.116.597.228.992.336.885.351 2.682.35 5.392-.005.516-.083.951-.279 1.305-.587 1.368-.933 2.619-1.892 3.754-2.879-.159.293 1.259-1.369 4.214-4.933.201-1.639.161-3.306-.154-5.004-.273-.848-1.029-2.041-2.252-3.569-.659.472-1.391.853-2.214 1.122-1.161.404-2.12.674-2.876.812-2.132.435-3.547.657-4.245.663-.08.001-.15-.001-.212-.006-2.243-.014-4.48-.592-6.711-1.734-1.711-.792-2.902-2.041-3.573-3.746-.135-.453-.167-.889-.099-1.311-.044-.094-.085-.186-.116-.274a2.9858 2.9858 0 01-.166-1.058c.174-1.283.615-2.369 1.322-3.259.832-.9 1.982-1.406 3.448-1.516.668-.139 1.552.163 2.655.905.443.397.49.755.139 1.071-.132.109-.282.155-.447.141-.617-.192-1.119-.269-1.504-.23-.166-.003-.492.129-.978.396l-.778.475-.071.104c.153-.025.303-.041.45-.042.318-.003.624.049.919.154.568.175 1.241.669 2.02 1.482 1.08.487 2.088.757 3.023.812.042.001.086.001.131 0 .38-.003.865-.074 1.402-.177l.121-.422c-.353-1.177-.833-2.178-1.44-3-1.33-.921-2.433-1.669-3.331-2.26-.006 0-.013.001-.019.001-1.013.009-1.947-.565-2.809-1.681-.932-.456-2.378-.84-4.352-1.151z\"\n                />\n              )}\n              {showGallows && (\n                <g id=\"gallows\" transform=\"matrix(-1 0 0 1 347 0)\">\n                  <path\n                    css={reveal}\n                    d=\"M236.473 330.941c-15.551-1.126-30.127-1.747-43.728-1.864l-.328-.003c-19.375-.13-33.274-.048-41.698.245-15.167.443-26.908 1.077-35.222 1.903-5.922.547-11.421 1.192-16.496 1.933-3.644.5-8.253 1.237-13.821 2.209 2.983-.75 5.802-1.455 8.458-2.116 12.93-1.736 26.125-3.298 39.605-4.672 3.556-.344 7.035-.643 10.457-.909 1.752.014 3.549.029 5.394.043 2.374.004 4.592-.01 6.651-.043l12.63-.297c2.644-.05 5.51-.079 8.598-.088 13.475.051 23.218.154 29.231.307l.6.018c-2.221.275-3.519.413-3.863.411-.505.352-.482.677.07.975.282.005.79-.033 1.524-.112l4.361-.514c1.098-.101 2.351-.184 3.758-.249.927-.043 1.922-.077 2.971-.104l3.703.227.247-.022c.083-.069.126-.131.177-.194 4.614.167 8.448.331 11.489.492.729-.016 5.467.364 14.213 1.142 7.49.493 12.127.754 13.912.782 2.364.056 4.518.088 6.483.101.52.055 1.039.111 1.573.169.332.101.73.217 1.21.352.16.02.299-.05.43-.168 1.489.168 3.03.349 4.628.54-.072.128-.092.292-.04.505.06.218.531.559 1.412 1.024.313.044.537-.105.671-.446 1.286.376 2.672.716 4.158 1.022.749.131 1.462.263 2.192.395.186.111.44.238.787.387.213.052.382.016.508-.108 1.512.444 2.782.814 3.846 1.122.067.039.123.083.199.117.039-.001.066-.022.1-.029 1.888.547 3.018.867 3.386.958.414.118 1.077.294 1.961.522-3.327-.557-7.161-1.103-11.508-1.639-16.28-1.988-31.242-3.43-44.889-4.324zm-174.378 7.216c-5.558 1.163-10.56 2.376-15.033 3.635.235-.079.463-.157.699-.235 2.506-.807 5.178-1.635 7.98-2.478 2.983-.552 6.054-1.096 9.259-1.626.976-.157 1.962-.306 2.942-.46-2.356.45-4.309.839-5.847 1.164zm-36.256 9.939c2.717-1.012 5.885-2.209 9.52-3.597.073.051.162.103.265.152-3.516 1.239-6.983 2.488-10.36 3.756.174-.101.362-.203.575-.311zm-5.353.904c-.091.034-.196.076-.29.112-.095-.125-.281-.246-.566-.361l8.387-2.743c.346-.116.743-.246 1.167-.383-1.257.492-2.468.99-3.614 1.496-.019.009-.032.018-.051.028-1.896.706-3.581 1.326-5.033 1.851zm-3.463-2.219l1.258-.475c.032.017.047.035.083.052.08-.006.172-.017.255-.024-.11.053-.232.109-.339.161-.142.071-.259.138-.394.208-.333.043-.625.07-.863.078zm.989-2.074c5.174-1.897 9.87-3.562 14.066-4.984.128-.024.243-.047.374-.072l-.924.39-4.301 1.756c-1.471.59-2.971 1.177-4.502 1.762l-3.142 1.186c-.495-.062-1.016-.078-1.571-.038zm1.779-3.694c-1.708.331-3.223.751-4.545 1.259-.211.001-.329-.051-.352-.154v-.001c.477-.12 1.072-.289 1.799-.512l10.561-3.536c2.02-.666 3.508-1.111 4.463-1.333 1.18-.292 2.371-.534 3.574-.729 2.321-.361 4.909-.707 7.764-1.035.567-.083 1.042-.182 1.439-.296l-.771.304c-1.64.485-3.402 1.021-5.308 1.614-2.072.655-4.274 1.378-6.587 2.16-7.365 1.44-11.386 2.195-12.037 2.259zm-5.788-.159c-.015.009-.029.018-.043.026-.025.002-.044.001-.07.003l.113-.029zm4.643-1.229c1.15-.303 2.324-.601 3.511-.896l-4.497 1.516c-.892.296-1.67.537-2.334.723-.032-.192-.101-.326-.202-.411l3.522-.932zm98.379-16.568c5.926-.206 9.615-.314 11.068-.324 3.871-.047 7.268-.087 10.209-.121-2.215.344-4.406.707-6.58 1.084-6.588-.064-12.351-.131-17.276-.201-1.849-.017-3.978-.017-6.387-.001-1.714.015-3.363.04-4.97.071 2.452-.148 4.736-.246 6.81-.281.066-.035.098-.071.15-.106 1.813-.035 4.134-.076 6.976-.121zm58.83-.276c-.568-.055 7.733.225 24.856.837-4.727-.082-9.607-.138-14.662-.161l-.474-.005c-5.109-.044-9.564-.045-13.366 0-2.372.009-7.446.12-15.221.332-2.505.044-4.846.066-7.025.065-4.351-.032-8.448-.064-12.304-.099 2.12-.333 4.233-.673 6.382-.973.667-.071 1.362-.101 2.084-.088 4.146.344 6.331.437 6.553.282.413-.138.74-.295.997-.468 11.019.068 18.419.161 22.18.278zm47.822 1.523c-1.636-.071-3.299-.138-4.986-.202 1.37.047 2.565.093 3.587.138.445.015.926.041 1.399.064zm58.573-17.333l-.012.262c-.016-.01-.037-.021-.045-.031-.099-.037-.075-.117.057-.231zm19.261-189.856c-.13-.082.368-.576 1.466-1.465l-.157 1.163c-.519.189-.961.295-1.309.302zm2.323-10.034c-.859.064-1.335-.516-1.432-1.74-.036-.6.037-1.206.164-1.814.147.03.289.035.415-.012.452-.199.548-.603.285-1.213l.31-.128c.118.055.246.121.368.181.098.12.202.268.314.47l-.237 1.429c-.077-.048-.163-.103-.222-.132-.182-.091-.34-.127-.474-.111-.295.066-.465.257-.509.574.114.522.456.859.976 1.051l-.054.326a2.806 2.806 0 00-.009.549c.021.216.063.404.13.563l-.025.007zm-46.188-64.237c-.072.045-.138-1.031-.197-3.23.369.041.683-.06.945-.301l.021-.015c-.233 1.645-.49 2.827-.769 3.546zm-5.119 1.426c-.111.173-.221.309-.33.405l-.037-.239c-.095-1.28-.092-2.657.008-4.133l.037-.384c.135-.126.272-.273.408-.419.493-.032 1.005-.065 1.537-.1-.367 1.699-.896 3.328-1.623 4.87zm-4.588-1.96c-.42-.16-.804-.741-1.151-1.742-.058-.18-.111-.418-.161-.686.6-.037 1.274-.079 2.032-.127.249.452.556.812.946 1.045-.616.888-1.172 1.392-1.666 1.51zm-83.516 16.104c-.114-.008-.205.023-.293.058l.133-3.732c.002-.802.002-1.464.002-2.006.034.254.061.52.096.772.042.351.08.692.113 1.025.114 1.215.22 2.283.317 3.205-.004.333.012.658.022.986-.079-.15-.194-.266-.39-.308zm-11.244-11.815c-.1-.305-.115-1.027-.052-2.124.162-.033.318-.084.465-.167.003.094.015.187.017.28-.002.227-.002.435-.004.649-.161.571-.304 1.031-.426 1.362zm-7.74-2.678c-.101.032-.178.074-.231.124-.186.296-.374.493-.561.591-.317.164-.734.336-1.251.516l.077-.347.174-.145c.19-.191.377-.412.558-.663l.541-.88c.048-.054.096-.092.144-.143.269-.002.518-.004.77-.007.065.041.13.081.195.12-.03.129-.053.263-.035.423.035.182.132.342.276.484-.001.091.001.191.001.284-.112-.282-.326-.408-.658-.357zm-10.284-9.024l1.408-1.338 1.055-.704c.095-.055.215-.09.358-.107l.016-.001 1.384 1.018c.535.527.922.918 1.188 1.196-.108-.011-.215-.028-.327-.033-.323-.169-.584-.273-.783-.311-.168-.04-.378-.06-.629-.057h-.039c-1.342.021-1.983.039-1.92.057-.331.04-.6.13-.807.27-.119.082-.219.169-.3.262-.654.76-1.035 1.213-1.14 1.361l-.386.19c.139-.375.288-.755.459-1.145.097-.208.251-.428.463-.658zm.977-2.446l.023-.003c-.089.017-.566.447-1.429 1.287.464-.897.933-1.324 1.406-1.284zm12.511 1.7l.111-.033c-.004.034.006.059.004.091-.05.035-.094.087-.14.131.007-.064.022-.119.025-.189zm3.786-2.602c.239.117.451.345.646.644-.016.025-.037.044-.053.07-.295-.244-.609-.239-.946.015-.139.102-.251.232-.337.389-.016.046-.031.078-.047.121-.181-.039-.361-.057-.539-.029-.112.023-.212.069-.312.114.446-.956.974-1.4 1.588-1.324zm3.734.361c.179-.021.34-.003.487.041-.049.054-.11.099-.15.163-.014.025-.024.053-.037.078-.214-.004-.437.077-.667.243-.03-.026-.064-.047-.096-.069.178-.285.333-.443.463-.456zm8.461 13.869l-.008.816c-.019-.256-.024-.54-.028-.826.012.002.023.01.036.01zm-26.655.361c.138-.038.368-.133.719-.302l.006-.002c-.021.18.012.34.084.484-.251-.037-.528-.107-.809-.18zm18.039 34.532c-.008-.398-.011-.775-.011-1.13.027-2.451.037-3.946.031-4.518.007-.191.012-.348.012-.433l.026-2.842c-.001-.631-.016-1.297-.044-1.998-.109-2.544-.201-4.775-.272-6.693-.03-.868-.05-1.74-.064-2.618-.015-.516-.026-2.376-.034-5.581a50.137 50.137 0 01-.002-.489c.036.506.081 1.109.139 1.836.022.33.04.637.052.923l.095 2.788.007 2.345c.004.42.015.865.032 1.336.014.352.032.732.056 1.139l.195 3.169c.125 2.659.184 4.023.177 4.094.026.901.04 1.714.04 2.442l-.042 5.595c.002.222.008.493.018.811l.095 2.563c.01.79.022 1.433.036 1.951l-.389-.192c-.101-2.635-.153-4.135-.153-4.498zm.815-27.956c.04.675.075 1.501.105 2.48.01.133.025.758.043 1.849-.013-.277-.029-.574-.051-.893-.105-1.344-.175-2.326-.211-2.948-.029-.469-.049-1.008-.063-1.615-.006-.216-.01-.667-.011-1.327.045.622.108 1.438.188 2.454zm6.569-18.887c.04.067.087.131.141.194l-.273.026c.035-.036.072-.073.093-.11.021-.037.027-.074.039-.11zM138.009 44.45c.059.01.109.03.169.039.23.023.463.012.697-.02-.539.298-.977.499-1.313.6.28-.199.424-.405.447-.619zm-2.533-1.401c-.011.079-.021.16-.027.262-.038-.143-.067-.272-.099-.407.037.053.087.094.126.145zm6.364-3.597l-.004-.02c.422.979.447 1.812.076 2.499.261-.855.237-1.681-.072-2.479zm-1.864 4.679c.537-.255 1.085-.639 1.645-1.162h.029l-.441.505c-.148.222-.205.419-.17.594-.279.21-.431.342-.458.395-.092.118-.123.262-.094.429-.125.17-.233.281-.323.334.318-.499.242-.859-.188-1.095zm117.225-17.985l.01-.016c.194.241.298.412.315.517-.003.006-.006.013-.009.018l-.497.065c.053-.218.111-.417.181-.584zm2.329.096c.149.014.293.054.433.106l-.933.121c.164-.166.323-.246.478-.227h.022zm6.059-1.406l.044-.002c.397.024.654.365.779 1.007l-1.68.119c.347-.792.633-1.17.857-1.124zm2.586.402c.212.021.384.169.518.441l-.927.066c.172-.313.309-.485.409-.507zm7.228-1.523c.344-.237.694-.157 1.052.24.114.147.175.487.19.999-.77.104-1.498.195-2.188.274.283-.614.596-1.126.946-1.513zm26.072-4.374c-.025-.386.224-.561.747-.522h.032c.3.004.637.054 1.009.149-.764.551-1.096 1.428-.994 2.631-.517-.996-.781-1.749-.794-2.258zm2.864.455h.036c.313.005.677.112 1.093.321.008-.025.288.188.841.64.644.529 1.315 1.149 2.01 1.847.004.038.008.074.013.112-.533.072-1.02.136-1.456.191-.256-.249-.507-.504-.765-.749-.307-.313-.56-.59-.759-.832l-.148-.196c.194-.11.293-.284.295-.523-.013-.173-.082-.312-.209-.414-.14-.17-.462-.169-.967.003-.279.119-.428.343-.45.672-.129.275.323.945 1.356 2.008-.574-.1-1.062-.061-1.461.118-.656-1.951-.466-3.017.571-3.198zm7.291-13.942c-.216-.297-.3-.67-.252-1.121.46-.233.925-.411 1.394-.563-.041.189-.084.376-.108.58-.041.275-.081.602-.12.957-.301.054-.602.109-.914.147zm9.677 9.046c.238.471.153 1.031-.254 1.681-.455-.498-.979-.875-1.545-1.182l.029-1.043c.845.021 1.443.198 1.77.544zm-.563 7.116c.037-.354.043-.674-.001-.941-.155-.72-.616-1.137-1.351-1.287l.011-.419c.491-.32.978-.657 1.459-1.026l.092.199c.444 1.122.367 2.281-.21 3.474zM300.458 79.12l-5.695-8.834-6.925-10.134-18.384-21.336c.087-.166.15-.377.19-.634l.228-.015c.393.18.767.158 1.121-.073l3.915-.254c.009.007.014.022.024.027.291.221.555.23.79.024.035-.033.059-.071.084-.109l12.031-.78c1.685-.124 3.13-.239 4.336-.347l8.377-.78c.972-.026 1.989-.064 3.033-.11-.051.097-.115.21-.159.3-.442.946-.645 1.742-.606 2.389.02.484.158.868.414 1.149.136.161.342.298.615.413.05.299.195.544.434.736.207.165.478.252.814.266.591.041 1.477-.337 2.657-1.133.572-.372 1.105-.774 1.633-1.18.012.462.023.92.032 1.373-.375.236-.73.477-1.039.729-.574.479-.974 1.024-1.202 1.638-.506 1.419-.058 2.267 1.343 2.546-.974.787-1.314 1.564-1.021 2.333.153.256.425.4.815.433.213.017.547-.021 1.004-.116.033.019.086.023.125.038-.024 1.373-.062 2.689-.117 3.938-.091 3.446-.994 12.749-2.711 27.909l-.617 7.97c-.832-.977-1.763-2.058-2.791-3.245l-2.748-5.131zm19.016-62.434c.276.204.532.437.759.709-.264.204-.528.391-.793.578l.034-1.287zm-.117 4.406l.004-.132c.03.018.076.018.101.04.112.109.173.266.186.47-.09-.146-.188-.269-.291-.378zm-4.089 82.152c-.012.031-.022.066-.033.1-.052-.061-.116-.102-.185-.137v-.003c.068.012.144.026.218.04zm-6.494-56.949c.096-.119.231-.248.408-.386.079-.061.175-.127.281-.197-.001.186-.003.369-.005.553-.094.076-.183.155-.262.236-.231.057-.427.095-.592.114-.059.023-.002-.083.17-.32zm.691-2.339c-.465-.02-.864-.088-1.17-.225-.151-.071-.203-.257-.153-.558.108-.623.543-1.213 1.3-1.77.013.87.021 1.722.023 2.553zm-2.588-8.364c.424-.025.844-.05 1.278-.078.382.233.764.403 1.149.516.011.292.022.589.031.877-.287.208-.566.421-.874.617-.756.501-1.406.854-1.949 1.061-.328.062-.486-.148-.471-.629.002-.541.288-1.333.836-2.364zm-2.066.26c.027-.048.064-.102.092-.15.201-.011.404-.021.609-.032-.045.081-.095.166-.137.247-.632 1.101-1.085 2.04-1.359 2.817-.2-.625.066-1.586.795-2.882zm22.904 304.062c.467-.039.928-.086 1.382-.142.434-.004.882-.004 1.327-.005-.197.145-.338.322-.408.542-.028.096-.022.197-.021.298-.708-.225-1.465-.456-2.28-.693zm-13.166-2.256c-.166-.045-.333-.085-.499-.13.07-.005.138-.011.207-.017 2.294.528 4.435 1.044 6.436 1.549-.332.022-.649.048-.969.072-1.592-.482-3.312-.973-5.175-1.474zm1.491 1.861c-1.432.231-2.272.362-2.52.394-.219.03-.401.052-.576.072-2.044-.594-4.155-1.167-6.305-1.728.154-.019.317-.052.47-.07 1.294-.14 2.625-.27 3.974-.396 1.061.273 2.132.537 3.178.824.97.26 1.89.517 2.786.773-.336.042-.672.082-1.007.131zm-210.504-9.202c7.641-.874 15.99-1.798 25.047-2.77.861.008 1.738.017 2.63.026-8.977.862-19.248 2.032-30.82 3.511 1.084-.266 2.133-.522 3.143-.767zm-19.929 2.719c3.18-.523 6.319-1.017 9.439-1.497.808-.096 1.625-.193 2.453-.29l-2.486.607c-.75.165-1.543.334-2.38.508-.858.115-1.713.229-2.584.347-5.036.692-9.728 1.362-14.079 2.012 3.092-.565 6.293-1.129 9.637-1.687zm-42.895 4.594c-4.3 1.319-7.547 2.364-9.713 3.127-.463.158-.902.31-1.35.465-.365.103-.747.211-1.158.331 1.761-.728 4.005-1.674 6.739-2.841 1.699-.334 3.531-.696 5.482-1.082zm3.334-3.823c.179-.031.352-.062.532-.093.198-.032.402-.063.601-.096l-1.739.685c.275-.149.479-.314.606-.496zm-20.313 1.59c1.885-.467 3.826-.925 5.821-1.376.194.029.387.059.593.104.08.006.154-.002.222-.028.151-.102.233-.209.28-.318.059-.013.119-.027.179-.04 11.888-1.447 21.683-2.587 29.394-3.422-9.454 1.156-21.698 2.87-36.744 5.144l.255-.064zm65.072-4.352l10.25-2.222 7.257-1.468c.019 0 .039-.001.058-.001.979-.006 1.895-.009 2.776-.009-.685.299-1.441.583-2.276.851-.682.203-1.327.388-1.979.579-4.229.59-8.391 1.204-12.495 1.84-1.221.145-2.417.289-3.591.43zm-38.163 4.646c1.488-.276 2.926-.539 4.317-.79-1.06.482-2.015.899-2.901 1.272-2.985.529-5.839 1.074-8.527 1.638 1.67-.509 4.044-1.217 7.111-2.12zm60.655-8.342c.112 0 .216.001.326.002-.209.049-.408.095-.623.145.105-.053.198-.098.297-.147zm-18.839 1.801c.086-.108.139-.205.184-.299.914-.139 1.843-.279 2.795-.424l2.055-.283-5.142 1.117c.034-.038.077-.071.108-.111zm-14.92 3.293c1.457-.349 2.842-.649 4.102-.864l.12-.017-3.819.829c-.137.018-.267.034-.403.052zm-17.267 3.39c.685-.104 1.382-.208 2.106-.315-1.457.413-2.879.822-4.273 1.229-2.043.476-4.015.948-5.919 1.416 2.523-.731 5.228-1.51 8.086-2.33zm-.896-1.716c1.25-.218 2.457-.425 3.614-.619.782-.134 1.703-.289 2.732-.457.074.008.151.012.223.023l-5.703 1.756c-.014.004-.027.008-.04.012-.923.139-1.82.278-2.663.412-.497.08-.974.162-1.464.243.407-.188.804-.369 1.233-.571.659-.282 1.35-.546 2.068-.799zm10.141-3.269c.961-.042 2.045-.049 3.254-.019l.345.016c-3.18.497-5.702.898-7.573 1.202-.275-.033-.55-.064-.838-.065h-.018c-.58-.019-1.272.062-2.025.198.514-.149 1.029-.299 1.561-.453 1.72-.517 3.485-.81 5.294-.879zm14.083-1.627c-.099-.123-.2-.229-.305-.319.468-.048.924-.095 1.371-.142 1.688-.161 3.348-.317 4.979-.467-2.135.327-4.153.637-6.045.928zm.541.979c-.005-.017-.008-.033-.014-.05 2.078-.318 4.301-.658 6.64-1.014-.167.066-.34.121-.519.165l-6.107.899zm-4.405.626c1.083-.167 2.216-.342 3.384-.522.006.013.013.03.02.043l-1.607.236c-.628.109-1.273.242-1.919.374.042-.044.097-.088.122-.131zm-2.054-1.338c-.52.143-1.067.3-1.664.475-.765-.037-1.437-.067-1.985-.09 1.264-.134 2.481-.263 3.649-.385zm-7.928 3.979c-1.046.142-2.054.282-3.037.418l6.802-2.092c1.417-.222 2.944-.46 4.573-.712l.54.025c.076.004.133.006.198.008-.827.179-1.667.375-2.523.592-2.249.594-4.421 1.18-6.553 1.761zm-49.568.547c.459-.049.923-.084 1.4-.088.063-.007.119-.021.164-.043.057-.03.082-.078.123-.117.113.051.239.101.363.151-.248.037-.501.075-.774.115-.777.115-1.694.23-2.718.345.458-.119.937-.24 1.442-.363zm27.377 1.236c-2.729.543-5.249 1.043-7.604 1.509l2.208-.871c2.983-.888 5.831-1.665 8.558-2.344.47-.001.947.012 1.439.053.235-.146.334-.308.326-.482l2.596-.603c1.851-.39 3.441-.727 4.776-1.013.928-.12 1.86-.237 2.803-.353-4.522 1.305-8.618 2.498-12.263 3.575-.936.174-1.872.347-2.839.529zm-17.582 6.93l.088-.023c-1.14.471-2.32.873-3.528 1.224.695-.254 1.408-.51 2.157-.775.314-.11.647-.226.979-.34.099-.027.207-.059.304-.086zm267.001-47.175c-.423.026-.861.059-1.298.092.017-.157.038-.322.054-.477.077-.793.151-1.658.222-2.564.429 0 .849-.001 1.256-.004-.083 1.028-.161 2.013-.234 2.953zm30.602 39.495c-.122.018-.225.077-.313.178-.085.146-.108.274-.095.39-4.104-.68-8.008-1.27-11.727-1.777 3.012.002 5.457.022 7.337.058.113.02.218.039.331.058 1.046.2 2.228.428 3.564.69.145.027.319.055.513.083.187.04.386.079.568.118l.746.189c-.287.01-.592.015-.924.013zm-9.815 1.603c-3.617-.762-7.77-1.588-12.469-2.479-.103-.019-.204-.036-.307-.054.186-.01.365-.022.554-.031 1.021-.052 2.002-.081 2.996-.117 4.068.485 7.754.973 11.046 1.464l3.901.602 1.873.308c-2.209.027-4.739.129-7.594.307zm5.17 2.752c-.309.011-.622.02-.924.031-.603-.161-1.232-.324-1.878-.489.896.146 1.833.3 2.802.458zm-26.898-33.188c-.032-.021-.057-.044-.09-.065-.49-.289-1.047-.521-1.638-.727.655-.064 1.259-.126 1.827-.186-.031.316-.064.636-.099.978zm12.941 26.727c-.161.005-.311.014-.47.02-2.419-.291-5.077-.575-7.924-.852a5.06 5.06 0 00.105-.175c3.426.033 6.048.065 7.867.094l6.023.65c.4.053.783.106 1.173.159-2.73 0-4.996.035-6.774.104zm-9.242.275c.01-.009.021-.015.031-.025.046-.046.081-.102.125-.149.82.079 1.618.159 2.404.238-.443.031-.942.069-1.492.113-.357-.059-.713-.119-1.068-.177zm-3.842-25.607c-.083.917-.149 1.759-.202 2.539-.148.194-.319.395-.517.602a49.886 49.886 0 00-1.87-.141c.282-1.401.542-2.765.782-4.095.838.285 1.444.627 1.815 1.024-.003.025-.005.046-.008.071zm-1.442 10.534c-.455.044-1.01.088-1.645.131-.011-.075-.022-.155-.033-.227.569-.001 1.139-.003 1.722.011h.04c.921-.017.893.011-.084.085zm1.799 15.641c-.103.008-.205.014-.306.021a395.61 395.61 0 00-4.75-.767c-.573-.086-1.127-.16-1.697-.244.052-.01.104-.023.156-.034 2.117.273 4.201.572 6.268.881.111.051.22.101.329.143zm17.663 3.138c-2.801-.447-5.35-.847-7.639-1.199-2.066-.425-4.224-.84-6.47-1.245.32-.027.622-.053.9-.076 1.455.243 2.919.478 4.347.739 3.308.633 6.307 1.222 9.011 1.77-.05.004-.1.008-.149.011zm-11.747 1.247c-1.271-.319-2.552-.634-3.859-.941-3.288-.778-6.719-1.528-10.279-2.25-.003-.004-.008-.006-.012-.01a820.43 820.43 0 013.871 0 60.81 60.81 0 001.57-.036c4.368.793 8.624 1.68 12.751 2.678-1.377.141-2.255.247-2.603.317-.518.081-.996.162-1.439.242zm30.398-.64c.65.12 1.122.221 1.452.307-.874.311-2.11.629-3.739.953-.651.123-1.254.226-1.831.319-1.943-.506-4.26-1.058-6.958-1.655 1.282-.056 2.463-.094 3.508-.109 2.726-.025 5.125.019 7.219.127l.349.058zm-320.298-.384c.023-.012.049-.022.072-.034.552-.133 1.332-.337 2.359-.618.285-.068.579-.127.882-.179.439-.076.903-.143 1.391-.201 1.193-.119 2.091-.216 2.704-.289-.326.117-.684.246-1.072.387-.913.237-1.835.478-2.777.729-.561.139-1.103.233-1.626.284-.097.059-.174.119-.241.182-.518.034-.972.042-1.347.015-.166.001-.405-.026-.701-.077.121-.066.227-.131.356-.199zm24.445 4.99l-6.962 1.769c.961-.372 1.879-.775 2.752-1.213.306-.177.395-.418.265-.725l4.77-1.23c2.9-.712 6.133-1.413 9.682-2.104-1.765.685-3.465 1.343-5.098 1.975-1.844.536-3.373.984-4.58 1.34-.272.062-.561.126-.829.188zm244.337-8.509c-.367-.105-.614-.161-.741-.166l-.041-.002c-.036.002-.062.013-.094.019-.657-.119-1.303-.241-1.968-.359.098-.003.187.003.288-.002.235-.011.476-.027.721-.047.213-.02.443-.039.662-.06.208.028.42.056.63.083.449.339 1.069.538 1.91.558.506-.016 1.015-.069 1.522-.103 1.037.138 2.087.281 3.158.427-.812.005-1.28.014-1.36.026-.437.032-.74.152-.942.342-1.2-.232-2.416-.461-3.645-.687-.035-.011-.065-.019-.1-.029zM310.176 5.514c.01-.027.038-.06.085-.097h.003l.055.265c-.054-.043-.102-.099-.143-.168zM159.045 86.691l-.009-.334c-.008-.209-.025-.448-.041-.687v-1.958c0-.118.002-.233.005-.344.004-.201.014-.411.029-.626l.101-1.349c.035-.731.051-1.16.048-1.285.002-.199.001-.449-.004-.75-.034-1.104-.049-1.829-.047-2.176l.001-1.038c.02-.725.029-1.121.026-1.189l.002-6.413c.005-.219-.015-.816-.06-1.791 0-.112-.054-.722-.161-1.831-.016-.215-.024-.414-.027-.595-.002-.182-.001-.436.006-.762.047-1.798.071-2.786.069-2.964.006-1.753.005-2.898-.004-3.436-.003-.358-.009-.767-.017-1.214.06-.83.186-2.286.38-4.394l.118-2.011c.003-.19.006-.358.01-.508.018-.047.039-.086.055-.138.122-.406.234-.914.339-1.522.069-.386.099-.861.089-1.422-.005-.183-.038-.33-.086-.457.207-.167.389-.304.53-.391.063-.034.107-.041.158-.058.028.003.048.022.077.022.044 0 .092-.009.139-.014.069.059.123.101.175.142l.041.385.425 4.709.001 1.811.007.653c.007.326.018.673.033 1.041l.121 2.816c.004.003.018.734.042 2.191l.005.569c.004 1.317-.001 2.007-.018 2.071-.011.199-.024.365-.041.499l-.123.858c-.022.229-.032.401-.029.515.02.416.168.67.438.768-.006.033-.017.062-.016.097.006.089.039.183.098.283l.682 1.007c.126.15.273.224.441.221.127-.004.238-.03.33-.081.106-.061.179-.152.221-.273.163-.03.308-.095.433-.196.155-.131.262-.305.322-.521l.309-1.964c.037-.255.072-.557.106-.905.047-.454.081-1.052.105-1.776.029.353.052.709.096 1.055.062.493.127.782.197.869.101.177.252.267.453.268.411-.009.62-.253.627-.728-.012-.631-.123-1.885-.331-3.764.006-.544-.001-1.105-.02-1.683-.009-.288-.055-1.266-.139-2.931-.013-.334-.024-.655-.031-.962-.014-.58-.018-1.299-.013-2.156l.046-4.923c.046-.04.093-.082.143-.126.015.423.031.843.053 1.252.134 3.219.391 6.597.773 10.135-.001.969.031 1.728.096 2.277-.015.973-.008 1.931.021 2.873.025.722.06 1.303.104 1.744.074.768.345 1.144.793 1.166-.014.668-.035 1.469-.065 2.423a54.95 54.95 0 00-.015.83c-.008.683-.006 1.333.007 1.951.009.466.029.921.057 1.368-.204 1.324-.296 2.002-.274 2.027.019.381.218.572.578.59.029.169.067.331.099.496-.039 2.683-.03 5.587.031 8.73.017.444.207.663.569.66.403.015.609-.258.62-.82.032-.39.057-.805.072-1.244.008-.48.015-.904.023-1.282.154-.359.251-.943.288-1.765-.002-.475-.047-1.257-.134-2.342 0-.007-.002-.017-.003-.025l.079-1.651c.039-.973.072-2.02.099-3.141.077-3.559.096-5.811.056-6.757-.011-.622-.043-1.515-.095-2.679-.158-2.846-.246-4.562-.265-5.149-.034-.838-.052-1.604-.054-2.298.019-2.885.038-4.541.057-4.967.039-1.358.065-2.17.078-2.432.01-.264.05-.829.121-1.698.011-.205.01-.454-.003-.747.005-.211-.069-.799-.211-1.723l7.721-.957c3.261-.351 6.675-.617 10.241-.795 2.737-.138 5.643-.232 8.718-.281 3.646-.003 14.106-.147 31.381-.431l10.962-.066c1.848-.022 3.436-.059 4.767-.112h.012c-.03.006-.023.009.023.009.174.002.913-.036 2.203-.113.025.151.051.302.079.437.532 1.928 1.303 2.947 2.313 3.059.495.004 1.033-.253 1.61-.77.275-.251.536-.539.782-.863.159-.054.27-.127.333-.219.084-.097.125-.245.123-.444l.21-.359c.025-.012.052-.033.077-.044-.047.867-.071 1.726-.05 2.564-.051 1.816.293 2.696 1.033 2.641.788-.062 1.457-.767 2.008-2.114.619-1.693 1.052-3.184 1.338-4.518.222-.014.436-.028.664-.043l.301-.025c.05 2.332.12 3.582.212 3.729.129.607.39.985.783 1.134.626.205 1.112-.145 1.461-1.048.2-.598.374-1.306.525-2.109l2.66 4.506c1.105 1.706 3.383 4.665 6.834 8.879 4.643 5.688 10.805 12.944 18.488 21.766l8.78 11.223 1.13 1.333 1.276 2.407.901 1.953 1.631 2.538 2.141 4.64c.056.078.122.133.181.206-.474.042-.783.103-.911.183-.376.255-.454.571-.236.95-.407.15-.656.366-.748.652-.073.216-.017.428.12.638-.16.578-.259 1.274-.283 2.121.04 2.216.958 3.288 2.733 3.248l-.022.16c-.82.457-.967.903-.43 1.339.068.036.158.035.243.042l-.408 3.002-.466.387c-.497.471-.539.882-.127 1.236-1.346 1.044-2.097 1.732-2.253 2.066-.356.706-.194 1.272.483 1.696.322.2.883.166 1.64-.057l-.67 4.931-2.41 19.332-1.716 9.809-.648 5.544-.075.475c-1.766 10.077-3.56 21.481-5.38 34.213-.576 6.746-1.125 11.398-1.648 13.957l-1.549 18.195-2.215 15.926-.421 4.842-.956 15.118-1.34 10.498c-.11.843-.203 1.862-.278 3.056-.076 2.006-.18 4.142-.305 6.368-.072.019-.15.038-.216.057-.52.153-.907.313-1.164.477-.466.282-.8.615-1.002.999-1.258.514-2.254 1.052-2.987 1.613-.76.578-1.259 1.267-1.499 2.064-.652 2.491 1.444 4.26 6.243 5.322-.053 2.608-.042 5.381.032 8.321-.906.818-1.005 1.85-.286 3.097.077.11.175.213.287.311l-.137 3.06c-1.22.561-1.592 1.273-1.101 2.137.24.317.574.511.982.61-.031.311-.095.751-.198 1.343-1.137.266-2.2.571-3.156.931-2.146.819-3.423 1.724-3.831 2.717-.258.902.109 1.61 1.091 2.129.215.437.538.886.992 1.347-.789.631-1.159 1.296-1.111 1.993.031.516.297 1.055.797 1.617.556.579 1.358.952 2.408 1.119.276.051.696.094 1.25.131-.098.07-.19.142-.275.215-.766.196-1.424.399-1.947.612-.786.343-1.374.802-1.762 1.378-.005.009-.009.019-.014.027l-11.184-.81c-1.066-.089-5.825-.324-14.277-.704l-13.368-.892c-1.783-.108-5.279-.411-10.488-.907-.993-.082-2.206-.157-3.64-.227-4.099-.192-11.489-.408-22.172-.647l-24.083-.824c-4.074-.128-10.845-.227-20.313-.294l-.47-.005c-1.427-.083-10.969-.009-28.625.221-1.429.012-5.113.121-11.052.326l-10.202.195c-2.852.081-5.429.181-7.731.298-6.255.162-19.75 1.451-40.488 3.869-5.627.619-11.631 1.551-18.016 2.796-8.965 1.6-16.411 3.189-22.34 4.765-.464.079-.903.127-1.318.146l-3.598.193c-1.619 1.304-1.859 2.348-.74 3.135-.485.685-.231 1.06.763 1.119.056-.169.226-.342.506-.521.061.02.105.045.168.064.368-.011.715-.023 1.044-.036-.277.13-.549.261-.812.396-.227.054-.432.101-.607.138-.213.062-.307.198-.332.377l-.653.4c-.03.004-.064-.003-.093.004-.086.061-.156.123-.213.183l-.916.561c-.398.237-.772.448-1.123.632-.26.159-1.111.548-2.555 1.168-.192.147-.259.334-.201.561.083.226.244.344.487.354.059.001.126-.014.198-.044 1.316-.563 2.038-.885 2.165-.964.398-.199.822-.429 1.27-.691.216-.121.561-.331 1.008-.609.179.104.399.209.675.311.138.019.294-.063.467-.248.331.055.676.087 1.027.109-2.576.949-5.656 2.09-9.259 3.429-1.903.719-3.294 1.402-4.17 2.048-.317.422-.217.718.298.889.073.005.155-.014.245-.056.841-.541 1.453-.89 1.836-1.048.576-.271 1.363-.598 2.356-.981 4.247-1.577 7.765-2.878 10.587-3.915.173.118.365.237.599.361.46-.183.593-.426.404-.729.264-.097.524-.192.775-.283 4.575-.705 8.935-1.368 13.051-1.981-4.978 1.061-9.739 2.197-14.279 3.411-5.568 1.477-8.41 2.282-8.523 2.413-.781.453-.791.845-.028 1.18.165.013.509-.017 1.033-.088l3.416-.529c.066-.008.144-.007.211-.015.057.207.221.335.519.363.056.002.131-.002.216-.011.012.039.013.069.026.11.181.499.5.777.957.829.23.04.507.02.832-.062 1.153-.48 2.619-.889 4.396-1.227.385-.036 2.093-.343 5.102-.916-2.646.94-5.417 1.946-8.326 3.027-.244.119-.343.312-.298.581.032.111.092.19.166.253-1.008.293-1.589.74-1.691 1.356-.001.063.008.119.012.179l-1.124.424c-1.096.422-1.936.761-2.519 1.016l-1.386.625c-.056.023-.117.072-.183.151-.192.456-.05.721.426.798l3.646-1.513 1.559-.589c.176.149.41.258.692.33-.506.338-.913.661-1.205.967-.361.469-.262.781.295.931.485-.531 1.452-1.169 2.881-1.907.697-.111 1.63-.3 2.816-.57.697-.183 1.375-.36 2.043-.534-.941.306-1.905.623-2.915.954-1.453.459-2.17.882-2.149 1.267-.142.371.16.654.896.848-.947.384-2.008.826-3.214 1.346-1.141.438-2.152.661-3.033.667-.515.414-.458.739.176.975.834.015 1.905-.221 3.215-.711 1.993-.856 3.589-1.511 4.789-1.965.739-.266 1.541-.559 2.397-.874-.013.037-.024.087-.035.137-1.547.588-3.101 1.175-4.619 1.77-1.554.717-1.555 1.294-.001 1.729.55-.053.704-.333.463-.84l4.1-1.576c.002.113.001.213.007.341.06.267.213.412.461.436.189.029.354-.073.496-.306-.008-.338-.002-.61.012-.847l.328-.126c5.083-1.922 10.341-3.809 15.748-5.67-.657.293-1.241.585-1.731.876-1.58.99-2.566 1.71-2.956 2.157-.727.679-.761 1.142-.102 1.391.211-.024.333-.067.366-.129.244-.495 1.004-1.152 2.28-1.971.782-.555 1.742-1.075 2.88-1.56 1.661-.774 5.238-1.872 10.73-3.294 3.876-.989 8.031-1.934 12.462-2.831 2.19-.452 6.624-1.294 13.289-2.522-1.383.361-2.161.578-2.336.652-.899.239-1.809.491-2.719.743-1.043.136-2.296.271-3.807.405-.682.224-.902.514-.676.866-7.654 2.237-15.672 4.877-24.059 7.927l-26 9.684c-1.163.345-1.339.776-.532 1.296.467-.064 2.133-.634 4.997-1.71.155-.066.264-.185.329-.358 17.944-6.691 27.56-10.207 28.848-10.546 5.851-2.033 11.814-3.924 17.889-5.673.77.16 1.872.352 3.33.58.646-.058.793-.354.436-.888l-1.585-.301c.374-.104.749-.208 1.123-.311.663-.091 1.384-.202 2.169-.336 6.553-1.219 11.719-2.141 15.497-2.767l9.946-1.521c6.322-.893 13.075-1.623 20.26-2.194 9.173-.732 21.017-1.269 35.531-1.61 11.002-.218 25.173-.229 42.512-.032 12.374.217 26.002.881 40.888 1.993 12.043.834 25.368 2.124 39.974 3.872 9.877 1.214 16.806 2.329 20.79 3.345 5.166 1.227 10.226 2.952 15.182 5.174.325-.184.51-.369.559-.554 2.862 1.194 5.27 2.434 7.203 3.722.462-.099.589-.371.38-.816-.465-.361-1.175-.823-2.131-1.385-1.48-.861-3.367-1.754-5.646-2.677 7.123 2.24 12.075 4.114 14.825 5.616.237.012.408-.104.513-.348.056-.257-.019-.452-.228-.583-1.52-.81-3.295-1.605-5.31-2.387 1.633.599 2.926 1.114 3.833 1.535.943.432 1.577.805 1.902 1.116.191.072.371.493.539 1.262.086.141.213.223.381.246.639-.015.722-.541.252-1.582-.268-.529-.849-1.029-1.743-1.499-1.534-.897-6.031-2.547-13.494-4.949-.642-.201-1.308-.395-1.962-.593l.886-.144c.408-.061.83-.117 1.266-.169.69-.082 1.446-.151 2.233-.213 3.618 1.102 6.544 2.157 8.742 3.164 1.867.889 3.154 1.638 3.862 2.247.229.2.349.343.362.429-.238.541-.309.841-.214.9.074.205.238.316.491.33 1.58-1.11.656-2.499-2.77-4.165-1.857-.977-4.441-2.004-7.713-3.081.389-.019.78-.038 1.181-.055.081.077.189.124.328.135.201.003.394-.004.593-.004 2.172.588 4.135 1.16 5.886 1.715 1.691.559 2.786.999 3.289 1.324l.039.024-.493-.151c-.165-.003-.286.031-.362.103-.216.207-.249.434-.102.681.062.09.153.154.274.194.963.332 1.463.48 1.5.442.89-.093 1.067-.556.537-1.39-.43-.573-1.353-1.111-2.767-1.615-.347-.125-.72-.253-1.105-.382-.136-.24-.2-.381-.171-.392.141-.124.466-.207.978-.249.303-.027.644-.04.994-.05 1.165.337 1.996.61 2.482.815-.399-.147-.655-.144-.769.01-.207.225-.231.454-.072.684.284.232.868.388 1.753.47.843-.097 1.021-.542.544-1.327.527.09 1.076.159 1.671.188.822.013 1.233-.155 1.272-.485.453.018.896.03 1.319.035.138.003.265.001.398.001.233.127.466.275.703.466.072.04.166.056.283.048.328-.115.466-.297.42-.548.511-.032.985-.086 1.415-.161.882-.163 1.508-.353 1.877-.569.153-.155.196-.336.128-.545-.089-.202-.244-.309-.462-.321-.033-.003-.079.004-.142.019-.292.114-.57.205-.835.273-.24.063-.485.116-.736.159-.575.1-1.219.16-1.929.176-.155.003-.33-.001-.491-.001-.297-.138-.61-.253-.945-.333-1.437-.279-3.608-.457-6.488-.537 1.002-.24 1.766-.476 2.296-.706.061.037.13.069.216.091.394.02.586-.267.597-.829.039-.127.031-.246-.008-.362 0-.004.001-.007 0-.012-.001-.003-.006-.006-.007-.009-.12-.313-.521-.581-1.224-.801-.509-.131-1.141-.217-1.895-.26-.063-.003-.138-.005-.203-.008-.739-.13-1.478-.26-2.205-.384.325-.018.541-.044.638-.08.205-.06.33-.173.418-.312.375-.122.674-.281.921-.468.667.057 1.375.116 2.156.177l2.341.477c.229.027.445.024.649-.009 2.274-1.3 2.121-3.241-.46-5.824-1.195-.144-1.965.35-2.314 1.483l-4.064-.334c-.525-.052-1.063-.113-1.612-.182.016-.225.018-.462-.011-.73-.149-.869-1.169-1.612-3.062-2.228-.489-.063-1.004.114-1.543.528-.716-.136-1.44-.242-2.174-.32-2.516-.164-5.749-.47-9.698-.921-1.286-.114-2.772-.179-4.435-.204.247-.349.448-.773.591-1.291l.578-2.583c.049-.265.053-.598.009-1 .378-1.933 1.129-6.626 2.253-14.078.31-2.152.507-4.369.642-6.622.459-.516.738-1.103.805-1.774.074-.813-.142-1.502-.631-2.075.032-1.497.064-3.66.097-6.484 1.721-.446 3.148-.957 4.251-1.539 1.022-.57 1.657-1.29 1.905-2.159.129-.448.134-.947.018-1.497-.132-.608-.404-1.168-.819-1.679.081-.525.021-.981-.18-1.369-.348-.677-1.051-1.234-2.112-1.673-.81-.325-1.765-.613-2.859-.866.01-.18.02-.368.031-.528.044-.737.109-1.365.194-1.884l.752-3.307c.107-.564.168-1.112.18-1.645.045-1.942-.526-3.469-1.71-4.58-1.088-1.021-2.7-1.526-4.837-1.517h-.006c-1.866-.075-3.843.578-5.926 1.94-.334.169-.624.382-.875.636-1.521 1.257-2.294 2.67-2.3 4.241-.016.045.007.467.068 1.268l.008 1.548c.06.49.212.934.455 1.332.034.052.076.086.111.135l-.029.314c-.015.146-.037.409-.065.759-.062 0-.117-.003-.179-.004l-.063-.001c-.377-.004-.739.017-1.111.019.292-.573.419-1.199.366-1.883-.003-.348-.198-.937-.588-1.767-.037-.976-.113-1.627-.227-1.952-.116-.417-.278-.773-.485-1.07-.042-.06-.1-.103-.146-.158.03-.344.051-.632.06-.848.133-1.945.148-5.456.042-10.531l-.565-9.173-.094-2.708c-.041-2.743.039-5.628.241-8.653.523-3.341.798-5.353.823-6.035l1.281-17.951 1.125-10.004 1.343-8.659 3.238-12.292c1.719-10.322 2.54-15.76 2.465-16.312 1.107-11.684 1.66-17.959 1.656-18.827.217-3.019.529-9.281.935-18.785l.969-16.209c.325-.262.68-.557 1.085-.909.548.217 1.173.338 1.882.355 3.175-.091 4.568-1.707 4.179-4.849-.068-.474-.206-.922-.402-1.348 0-.01.008-.019.007-.029-.049-.151-.114-.258-.188-.343-.346-.612-.838-1.169-1.464-1.675-.004-.071.007-.137-.002-.21.374-.17.563-.656.569-1.458.006-.317-.028-.596-.069-.867.382-.138.471-.422.228-.868-.076-.09-.171-.154-.286-.195-.058-.023-.163-.051-.316-.083-.278-.472-.627-.721-1.053-.733h-.012c-.229.021-.43.074-.612.149-.106-.026-.189-.039-.255-.044a28.9568 28.9568 0 00-1.782-4.616l.3-2.331 3.946-24.158c.155-.792.702-5.26 1.64-13.405.131-1.221.212-3.022.245-5.401-.006-1.183-.011-2.313-.015-3.397.491-.384.776-.749.848-1.095.313-1.192.021-1.971-.858-2.347 0-.224-.001-.449-.001-.668.473-.398.79-.812.937-1.24.248-.791.074-1.317-.524-1.578.939-.946 1.299-1.877 1.08-2.793-.039-.176-.091-.329-.157-.457-.085-.171-.2-.318-.345-.438-.084-.272-.179-.498-.286-.68-.124-.205-.261-.368-.417-.489-.056-.07-.148-.128-.264-.178.012-1.295.028-2.382.05-3.246l.174-6.582c.293-.628.538-1.204.748-1.745.897-.826 1.573-1.729 1.985-2.723.643-1.604.572-3.129-.214-4.571.713-.841.972-1.766.774-2.775-.335-.988-1.319-1.504-2.937-1.559l.081-3.032c.039-.93.089-1.622.15-2.076 1.041-1.056 1.517-2.087 1.428-3.094-.734-2.549-2.205-4.021-4.409-4.418h-.047c-1.309.229-2.299.736-2.989 1.503-.063.014-.115.019-.179.033-.577.132-1.061.285-1.45.461-.431.191-.814.414-1.149.67-.246.193-.44.423-.581.688-.683.39-1.084.703-1.199.941-.206.329-.237.675-.095 1.036.227.49.61.815 1.147.977-.126.336-.09.596.107.782.088.069.202.11.342.122l.442.008 1.197.074c-.074 1.13-.141 2.462-.197 4.01a5.457 5.457 0 00-.709-.127h-.01c-2.157.133-3.406 1.299-3.747 3.499l-.029 2.038c.146 1.014.284 2.088.415 3.2-.772-.62-1.857-1.34-3.292-2.175-.681-.381-1.525-.599-2.528-.656-1.571-.002-2.175.805-1.814 2.422.172.695.529 1.524 1.074 2.489.123.216.273.439.411.658-1.763.031-4.314.018-7.675-.038-2.784.073-4.565.149-5.343.227l-5.588.46c-2.021.351-3.869.647-5.546.889-.045-1.454-.709-2.245-2.004-2.361l-.046-.001c-.472-.001-.874.184-1.206.556-.526.596-.974 1.395-1.355 2.372l-3.304.235c-.24-.679-.614-1.158-1.136-1.416-.547-.296-1.068-.155-1.566.422-.404-.63-.987-.933-1.749-.908-.709.045-1.318.723-1.827 2.038-.676-.428-1.379-.345-2.106.251-.631-.559-1.284-.853-1.962-.883-.452-.007-.878.166-1.276.517-.377-.538-.789-.784-1.234-.736-.553.033-.94.706-1.168 2.001l-1.713.223c-.465-.253-.835-.207-1.109.144l-1.554.202c-.191-.204-.398-.343-.628-.381-.597-.065-1.098.165-1.511.658l-.374.049c-.3-.91-.675-1.389-1.135-1.384h-.021c-.434-.07-.839.448-1.214 1.535l-12.694.712-7.828-.012c-.69.008-2.979.159-6.864.452-.83.062-1.555.136-2.176.221l-5.35.78-13.605.826-6.198.51c-2.677.389-5.417.67-8.221.843l-6.42.219-5.999.454-4.638.692c-.045-.079-.085-.166-.135-.238-.033-.05-.078-.094-.115-.142-.025-.145-.058-.317-.102-.534.015-.091.021-.184.018-.279a1.7355 1.7355 0 00-.039-.303.994.994 0 00-.007-.238 1.0281 1.0281 0 00-.114-.343c-.112-.207-.281-.381-.508-.524-.202-.136-.431-.202-.688-.201-.62.023-1.061.228-1.325.616-.111.162-.19.362-.237.601l-.045.327c-.017.008-.033.012-.049.02-.069-.225-.179-.428-.341-.6-.161-.176-.362-.3-.599-.373-.168-.052-.354-.079-.561-.079a2.9386 2.9386 0 00-.435-.107 1.715 1.715 0 00-.286-.024c-.235-.001-.442.067-.637.168-.053-.008-.106-.034-.16-.037-.344.009-.677.121-1.001.316-.034-.075-.049-.137-.089-.216-.19-.433-.473-.666-.851-.701-.185.001-.367.072-.552.214-.067.053-.125.121-.185.187-.332-.224-.724-.366-1.193-.403-.64-.041-1.179.319-1.625 1.038-.03-.027-.055-.064-.088-.084-.104-.071-.244-.11-.42-.115h-.013c-.059.004-.11.019-.166.028-.483-.772-1.063-1.186-1.745-1.219l-.043-.001c-1.11.038-1.981.848-2.617 2.416-.139-.656-.279-1.011-.421-1.057-.201-.135-.401-.17-.6-.106-.37.175-.531.672-.48 1.493l-.084.036c-.097-.042-.203-.065-.319-.073-.204-.273-.43-.528-.704-.739-.38-.196-.668-.112-.864.255-.059.162-.047.322.036.479.161.14.299.282.427.425-.307.333-.439.705-.377 1.121.015.057.051.096.073.146-.099.132-.186.267-.25.411-.026.002-.055.001-.08.003-.38.096-.714.223-1.022.368-.659-.004-1.426-.012-2.307-.026-.093-.052-.212-.105-.357-.158-.084-.132-.187-.29-.325-.497-.136-.388-.336-.786-.599-1.193-.226-.342-.51-.644-.851-.906-.198-.175-.788-.519-1.774-1.03-.824-.325-1.524-.478-2.101-.462h-.016c-.742.009-1.285.127-1.63.351-.377.204-.785.685-1.223 1.44-.165.301-.329.699-.496 1.192-.074.165-.296 1.008-.668 2.528l-.389 1.06c-.393.396-.597.894-.61 1.493-.018.319.013.651.095.997l.094.344c.079.529.364 1.685.854 3.475.216.722.503 1.323.862 1.802 1.215 1.545 2.6 2.29 4.157 2.234.702-.001 1.427-.126 2.175-.375.29-.082 1.25-.49 2.882-1.224 1.205-.435 1.915-.707 2.129-.816.674-.305 1.071-.711 1.221-1.206.001.287-.003.565.003.864.067.92.413 1.33 1.039 1.23.538-.049.948-.724 1.23-2.024.273.439.685.662 1.236.666.469-.049.824-.347 1.068-.895.13-.346.234-.698.333-1.052.262.455.591.784.998.969-.01.174-.026.357-.033.526-.114 2.062.296 3.182 1.23 3.359.147-.006.278-.062.401-.147.005 1.134.02 1.95.043 2.422.033 1.082.082 2.036.146 2.862.026.434.125 1.457.299 3.068.044.486.077.933.102 1.338l.201 4.39.31 5.811.152 5.214c.016.604.026 1.108.032 1.513.004.034.006.145.008.302-.013.335-.036.831-.072 1.513-.013.355-.02.803-.023 1.343-.001.509.004.971.013 1.388l.085 3.238c.009.562.009 1.07 0 1.523\"\n                  />\n                </g>\n              )}\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n});\n\nexport default Hangman;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, useTheme } from \"@emotion/react\";\nexport interface LetterProps {\n  onClick: (letter: string) => void;\n  isCorrect: boolean;\n  isDisabled: boolean;\n  letter: string;\n  shouldHighlight: boolean;\n}\n\nconst Letter = React.memo<LetterProps>(\n  ({ onClick, isCorrect, isDisabled, letter, shouldHighlight }) => {\n    const { border, breakpoints, colors, fontSize } = useTheme();\n\n    return (\n      <button\n        disabled={isDisabled}\n        onClick={() => onClick(letter)}\n        css={css`\n          background-color: transparent;\n          border: ${border.width}px dashed transparent;\n          border-radius: 50%;\n          color: ${shouldHighlight\n            ? isCorrect\n              ? colors.success\n              : colors.error\n            : colors.text};\n          display: inline-block;\n          font-size: ${fontSize[2]}px;\n          height: 30px;\n          margin: 5px;\n          outline: none;\n          padding: 2px 10px 10px 10px;\n          text-align: center;\n          transition: border 200ms ease-out;\n          width: 30px;\n\n          &:hover:enabled {\n            border: ${border.width}px dashed ${colors.grey};\n            cursor: pointer;\n          }\n\n          @media (min-width: ${breakpoints.md}) {\n            font-size: ${fontSize[3]}px;\n            height: 50px;\n            width: 50px;\n          }\n        `}\n      >\n        {letter}\n      </button>\n    );\n  }\n);\n\nexport default Letter;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, useTheme } from \"@emotion/react\";\n\nimport { GameStatus } from \"../../context/Game/state\";\nexport interface SolutionProps {\n  status: GameStatus;\n  text: string;\n}\n\nconst Solution: React.FC<SolutionProps> = ({ status, text }) => {\n  const { breakpoints, colors, fontSize, space } = useTheme();\n  let textColor: string;\n\n  switch (status) {\n    case GameStatus.Won:\n      textColor = colors.success;\n      break;\n    case GameStatus.Lost:\n      textColor = colors.error;\n      break;\n    default:\n      textColor = colors.text;\n      break;\n  }\n\n  return (\n    <div\n      css={css`\n        color: ${textColor};\n        font-size: ${fontSize[3]}px;\n        letter-spacing: 4px;\n        line-height: 1.2;\n        margin-bottom: ${space[3]};\n\n        @media (min-width: ${breakpoints.md}) {\n          font-size: ${fontSize[4]}px;\n        }\n      `}\n    >\n      {text}\n    </div>\n  );\n};\n\nexport default Solution;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, useTheme } from \"@emotion/react\";\n\nimport { useGameDispatch, useGameState } from \"../../context/Game\";\nimport { GameStatus } from \"../../context/Game/state\";\nimport Banner from \"../../components/Banner\";\nimport Button from \"../../components/Button\";\nimport Hangman from \"../../components/Hangman\";\nimport Letter from \"../../components/Letter\";\nimport Solution from \"../../components/Solution\";\n\nconst GamePage: React.FC = () => {\n  const { breakpoints, colors, fontSize, space } = useTheme();\n  const dispatch = useGameDispatch();\n  const {\n    chancesRemaining,\n    guesses,\n    letters,\n    solution,\n    solutionFormatted,\n    status,\n  } = useGameState();\n\n  const handleGuess = React.useCallback(\n    (letter: string) => {\n      dispatch({\n        type: \"guess\",\n        payload: {\n          letter,\n        },\n      });\n    },\n    [dispatch]\n  );\n\n  const handleKeyup = React.useCallback(\n    (event: KeyboardEvent) => {\n      if (letters.includes(event.key)) {\n        handleGuess(event.key);\n      }\n    },\n    [letters, handleGuess]\n  );\n\n  const handleNewGame = () => {\n    dispatch({ type: \"start\" });\n  };\n\n  const handleQuit = () => {\n    dispatch({ type: \"quit\" });\n  };\n\n  const handleGiveup = () => {\n    dispatch({ type: \"giveup\" });\n  };\n\n  React.useEffect(() => {\n    if (status === GameStatus.Playing) {\n      window.addEventListener(\"keyup\", handleKeyup);\n    } else {\n      window.removeEventListener(\"keyup\", handleKeyup);\n    }\n\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyup);\n    };\n  }, [status, handleKeyup]);\n\n  return (\n    <div\n      css={css`\n        text-align: center;\n        @media (min-width: ${breakpoints.lg}) {\n          text-align: left;\n        }\n      `}\n    >\n      {status === GameStatus.Lost && (\n        <Banner\n          type=\"error\"\n          message=\"Game over :-( \"\n          action={\n            <Button type=\"plain\" onClick={handleNewGame} text=\"New Game\" />\n          }\n        />\n      )}\n      {status === GameStatus.Won && (\n        <Banner\n          type=\"success\"\n          message=\"Congratulations! You Won :-)\"\n          action={\n            <Button type=\"plain\" onClick={handleNewGame} text=\"New Game\" />\n          }\n        />\n      )}\n      <div\n        css={css`\n          margin-top: ${space[2]}px;\n\n          @media (min-width: ${breakpoints.lg}) {\n            float: left;\n            width: 48%;\n          }\n        `}\n      >\n        <Hangman chancesRemaining={chancesRemaining} />\n      </div>\n      <div\n        css={css`\n          margin-top: ${space[3]}px;\n\n          @media (min-width: ${breakpoints.lg}) {\n            float: right;\n            margin-top: ${space[4]}px;\n            width: 48%;\n          }\n        `}\n      >\n        <Solution text={solutionFormatted} status={status} />\n        <div\n          css={css`\n            font-size: ${fontSize[0]}px;\n            margin-bottom: ${space[2]}px;\n          `}\n        >\n          <p\n            aria-live=\"polite\"\n            id=\"chancesRemaining\"\n            css={css`\n              color: ${colors.grey};\n            `}\n          >\n            (chances remaining: {chancesRemaining})\n          </p>\n        </div>\n        <div\n          css={css`\n            margin-bottom: ${space[3]}px;\n\n            @media (min-width: ${breakpoints.lg}) {\n              margin-left: -${space[2] + 2}px;\n              max-width: 440px;\n            }\n          `}\n        >\n          {letters.flatMap((letter) => {\n            const isUsed = guesses.includes(letter);\n            const isDisabled = status !== GameStatus.Playing || isUsed;\n            const isCorrect = solution?.includes(letter);\n            const shouldHighlight = isUsed && isDisabled;\n\n            return (\n              <Letter\n                aria-controls=\"chancesRemaining\"\n                key={letter}\n                onClick={handleGuess}\n                letter={letter}\n                isDisabled={isDisabled}\n                isCorrect={isCorrect}\n                shouldHighlight={shouldHighlight}\n              />\n            );\n          })}\n        </div>\n        <nav>\n          {status === GameStatus.Playing && (\n            <div\n              css={css`\n                margin-bottom: ${space[3]}px;\n              `}\n            >\n              <span\n                css={css`\n                  margin-right: ${space[2]}px;\n                `}\n              >\n                <Button type=\"warning\" onClick={handleGiveup} text=\"Give up!\" />\n              </span>\n              <Button type=\"error\" onClick={handleQuit} text=\"Quit Game\" />\n            </div>\n          )}\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n","/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, useTheme } from \"@emotion/react\";\n\nimport { useGameDispatch } from \"../../context/Game\";\nimport Button from \"../../components/Button\";\n\nconst HomePage: React.FC = () => {\n  const { breakpoints, fontSize, space } = useTheme();\n  const dispatch = useGameDispatch();\n\n  const handleStart = () => {\n    dispatch({ type: \"start\" });\n  };\n\n  return (\n    <div\n      css={css`\n        padding-top: ${space[3]}px;\n        text-align: center;\n\n        @media (min-width: ${breakpoints.lg}) {\n          padding-top: 0;\n        }\n      `}\n    >\n      <h1\n        css={css`\n          font-size: ${fontSize[4]}px;\n          line-height: 1;\n        `}\n      >\n        Hangman\n      </h1>\n      <p\n        css={css`\n          margin-bottom: ${space[3]}px;\n        `}\n      >\n        A simple game built with React\n      </p>\n      <Button\n        size=\"large\"\n        type=\"success\"\n        text=\"Start Game\"\n        onClick={handleStart}\n      />\n    </div>\n  );\n};\n\nexport default HomePage;\n","/** @jsxImportSource @emotion/react */\nimport { css, useTheme } from \"@emotion/react\";\n\nconst Footer: React.FC = () => {\n  const { fontSize } = useTheme();\n\n  return (\n    <footer\n      role=\"contentinfo\"\n      css={css`\n        flex-shrink: 0;\n        font-size: ${fontSize[0]}px;\n        text-align: center;\n      `}\n    >\n      <hr />\n      <p>\n        Read more about{\" \"}\n        <a href=\"https://github.com/mrgeorgegray/hangman\">this project</a>.\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 11.807C10.7418 10.5483 9.88488 8.94484 9.53762 7.1993C9.19037 5.45375 9.36832 3.64444 10.049 2C8.10826 2.38205 6.3256 3.33431 4.92899 4.735C1.02399 8.64 1.02399 14.972 4.92899 18.877C8.83499 22.783 15.166 22.782 19.072 18.877C20.4723 17.4805 21.4245 15.6983 21.807 13.758C20.1625 14.4385 18.3533 14.6164 16.6077 14.2692C14.8622 13.9219 13.2588 13.0651 12 11.807V11.807Z\"\n});\n\nfunction SvgMoon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMoon);\nexport default __webpack_public_path__ + \"static/media/moon.69f2ee1f.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.995 12C6.995 14.761 9.241 17.007 12.002 17.007C14.763 17.007 17.009 14.761 17.009 12C17.009 9.239 14.763 6.993 12.002 6.993C9.241 6.993 6.995 9.239 6.995 12ZM11 19H13V22H11V19ZM11 2H13V5H11V2ZM2 11H5V13H2V11ZM19 11H22V13H19V11Z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.63702 19.778L4.22302 18.364L6.34402 16.243L7.75802 17.657L5.63702 19.778Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.242 6.34405L18.364 4.22205L19.778 5.63605L17.656 7.75805L16.242 6.34405Z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.34402 7.75902L4.22302 5.63702L5.63802 4.22302L7.75802 6.34502L6.34402 7.75902Z\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.778 18.3639L18.364 19.7779L16.242 17.6559L17.656 16.2419L19.778 18.3639Z\"\n});\n\nfunction SvgSun(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSun);\nexport default __webpack_public_path__ + \"static/media/sun.d7fa4493.svg\";\nexport { ForwardRef as ReactComponent };","/** @jsxImportSource @emotion/react */\nimport { css, useTheme } from \"@emotion/react\";\n\nimport { Theme } from \"../../context/Game/state\";\nimport { ReactComponent as MoonIcon } from \"./moon.svg\";\nimport { ReactComponent as SunIcon } from \"./sun.svg\";\n\ninterface ThemeSwitchProps {\n  currentTheme: Theme;\n  handleChange: () => void;\n}\n\nconst ThemeSwitch: React.FC<ThemeSwitchProps> = ({\n  currentTheme,\n  handleChange,\n}) => {\n  const { colors, space, transitions } = useTheme();\n  const isDarkEnabled = currentTheme === \"dark\";\n\n  return (\n    <label\n      css={css`\n        display: block;\n        margin: 0 auto ${space[2]}px;\n      `}\n      data-testid=\"toggleTheme\"\n      htmlFor=\"themeToggle\"\n    >\n      <span\n        css={css`\n          clip: rect(0 0 0 0);\n          clip-path: inset(50%);\n          height: 1px;\n          overflow: hidden;\n          position: absolute;\n          white-space: nowrap;\n          width: 1px;\n        `}\n      >\n        {isDarkEnabled ? \"Enable Light Mode\" : \"Enable Dark Mode\"}\n      </span>\n      <div\n        css={css`\n          cursor: pointer;\n          background: ${isDarkEnabled ? colors.purple : colors.grey};\n          border-radius: 50px;\n          height: 22px;\n          padding: 3px 2px;\n          position: relative;\n          transition: ${transitions[2]}s;\n          width: 44px;\n\n          &::before {\n            content: \"\";\n            border-radius: 30px;\n            background: ${colors.background};\n            display: block;\n            height: 16px;\n            position: absolute;\n            transform: ${isDarkEnabled ? `translate(23px)` : `translate(1px)`};\n            transition: transform ${transitions[1]}s,\n              background ${transitions[1]}s;\n            width: 16px;\n            z-index: 2;\n          }\n        `}\n      >\n        <div\n          css={css`\n            align-items: center;\n            display: flex;\n            height: 100%;\n            margin: 0 2px;\n            justify-content: space-between;\n          `}\n        >\n          <SunIcon\n            css={css`\n              fill: ${colors.text};\n              height: 16px;\n              width: 16px;\n              z-index: 0;\n            `}\n          />\n          <MoonIcon\n            css={css`\n              fill: ${colors.background};\n              height: 16px;\n              width: 16px;\n              z-index: 0;\n            `}\n          />\n        </div>\n        <input\n          id=\"themeToggle\"\n          name=\"themeToggle\"\n          type=\"checkbox\"\n          checked={isDarkEnabled}\n          onChange={handleChange}\n          css={css`\n            opacity: 0;\n            position: absolute;\n            top: 0;\n          `}\n        />\n      </div>\n    </label>\n  );\n};\n\nexport default ThemeSwitch;\n","/** @jsxImportSource @emotion/react */\n\nimport React, { Fragment } from \"react\";\nimport { css, Global, useTheme } from \"@emotion/react\";\nimport emotionNormalize from \"emotion-normalize\";\n\nimport { useGameDispatch, useGameState } from \"../../context/Game\";\nimport Game from \"../../views/Game\";\nimport Home from \"../../views/Home\";\nimport Footer from \"../Footer\";\nimport ThemeSwitch from \"../ThemeSwitch\";\n\nconst App: React.FC = () => {\n  const { breakpoints, colors, fontSize, layout, space } = useTheme();\n  const { status, theme } = useGameState();\n  const dispatch = useGameDispatch();\n\n  function handleThemeChange() {\n    if (theme === \"dark\") {\n      dispatch({ type: \"setTheme\", payload: { theme: \"light\" } });\n    } else {\n      dispatch({ type: \"setTheme\", payload: { theme: \"dark\" } });\n    }\n  }\n\n  return (\n    <Fragment>\n      <Global\n        styles={css`\n          ${emotionNormalize}\n          * {\n            box-sizing: border-box;\n            -webkit-font-smoothing: antialiased;\n          }\n          html,\n          body {\n            background-color: ${colors.background};\n            color: ${colors.text};\n            font-family: monospace;\n            font-size: ${fontSize[1]}px;\n            line-height: 1.4;\n            padding: 0 ${space[1]}px;\n          }\n          a {\n            color: ${colors.link};\n            &:hover {\n              color: ${colors.linkHover};\n            }\n          }\n        `}\n      />\n      <div\n        css={css`\n          display: flex;\n          flex-direction: column;\n          margin: 0 auto;\n          min-height: 100vh;\n          max-width: ${layout.maxWidth};\n\n          @media (min-width: ${breakpoints.lg}) {\n            padding-top: ${space[5]}px;\n          }\n        `}\n      >\n        <main\n          role=\"main\"\n          css={css`\n            flex-grow: 1;\n          `}\n        >\n          {status === \"notStarted\" ? <Home /> : <Game />}\n        </main>\n        <Footer />\n        <ThemeSwitch currentTheme={theme} handleChange={handleThemeChange} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport GameContext from \"./context/Game\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameContext>\n      <App />\n    </GameContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}